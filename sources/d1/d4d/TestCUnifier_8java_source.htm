<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCUnifier.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d1/d4d/TestCUnifier_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCUnifier.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d1/d4d/TestCUnifier_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.agent;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d0/d73/namespaceorg_1_1lightjason_1_1agentspeak_1_1common.htm">common</a>.<a class="code" href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm">CPath</a>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> java.text.MessageFormat;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> java.util.Arrays;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> java.util.List;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> java.util.Set;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert.assertEquals;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert.assertNotEquals;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm">   48</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm">TestCUnifier</a> <span class="keyword">extends</span> <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    @Test</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a88eacc2f51afb450e4d696584410cecb">   57</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a88eacc2f51afb450e4d696584410cecb">literalvaluetraversing</a>() throws Exception</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">final</span> Set&lt;ILiteral&gt; l_test = Stream.of(</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;first(&#39;Hello&#39;)&quot;</span> ),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;first(&#39;Foo&#39;)&quot;</span> )</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        ).collect( Collectors.toSet() );</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_literal = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a21c3b3bf99c549beac905342eb37602b">from</a>( <span class="stringliteral">&quot;toplevel&quot;</span>, Stream.concat( l_test.stream(), Stream.of(</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(1)&quot;</span> ),</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(2)&quot;</span> ),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(3)&quot;</span> )</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        ) ).collect( Collectors.toSet() ) );</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_result = l_literal.<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>( <a class="code" href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm">CPath</a>.<a class="code" href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm#adcbbdb10315750231c09b30491b552fd">from</a>( <span class="stringliteral">&quot;first&quot;</span> ) ).collect( Collectors.toList() );</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        assertEquals( MessageFormat.format( <span class="stringliteral">&quot;literal traversing in {0} is wrong&quot;</span>, l_literal ), l_result.size(), l_test.size() );</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    @Test</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a98ac9c167e34e9f8057203c283d46d63">   81</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a98ac9c167e34e9f8057203c283d46d63">literalvaluesequentialtraversing</a>() throws Exception</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>[] l_test = Stream.of(</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;first(&#39;Hello&#39;)&quot;</span> ),</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;first(&#39;Foo&#39;)&quot;</span> )</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        ).toArray( <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>[]::<span class="keyword">new</span> );</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_literal = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a21c3b3bf99c549beac905342eb37602b">from</a>( <span class="stringliteral">&quot;toplevel&quot;</span>, Stream.concat(</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Arrays.stream( l_test ),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Stream.of(</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(1)&quot;</span> ),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(2)&quot;</span> ),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;second/sub(3)&quot;</span> )</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            )</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        ).collect( Collectors.toList() ) );</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            MessageFormat.format( <span class="stringliteral">&quot;literal sequential traversing in {0} is wrong for&quot;</span>, l_literal ),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            l_literal.<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a8c8794cf359011383143ac0ba6a18b86">orderedvalues</a>( <a class="code" href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm">CPath</a>.<a class="code" href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm#adcbbdb10315750231c09b30491b552fd">from</a>( <span class="stringliteral">&quot;first&quot;</span> ) ).toArray(),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            l_test</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        );</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    @Test</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#ac7f69347dd6eed92e5a71d9ecc2d020c">  110</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#ac7f69347dd6eed92e5a71d9ecc2d020c">structurehash</a>() throws Exception</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_first = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;foo(sub(3),sub(X),test(1235),data(value(&#39;data string&#39;)))[ann(1),value(&#39;test&#39;)]&quot;</span> );</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_second = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;foo(sub(3),sub(X),test(123),data(value(&#39;data string another value&#39;)))[ann(13),value(&#39;test2&#39;)]&quot;</span> );</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        assertEquals(</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            MessageFormat.format( <span class="stringliteral">&quot;literal value hash of [{0}] and [{1}] is [{2} / {3}] inequal&quot;</span>, l_first, l_second, l_first.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>(),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                  l_second.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>()</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            ),</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            l_first.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>(),</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            l_second.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>()</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        );</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_third = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;foo()&quot;</span> );</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> l_fourth = <a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">CLiteral</a>.<a class="code" href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">parse</a>( <span class="stringliteral">&quot;hallo()&quot;</span> );</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        assertNotEquals(</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            MessageFormat.format( <span class="stringliteral">&quot;literal value hash of [{0}] and [{1}] are equal [{2}]&quot;</span>, l_third, l_fourth, l_third.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>() ),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            l_third.structurehash(),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            l_fourth.<a class="code" href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">structurehash</a>()</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        );</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#aacf4fa48de324d2a72d887d0414b8a4b">  139</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#aacf4fa48de324d2a72d887d0414b8a4b">main</a>( <span class="keyword">final</span> String[] p_args ) <span class="keywordflow">throws</span> Exception</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm">TestCUnifier</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">invoketest</a>();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier_htm_ac7f69347dd6eed92e5a71d9ecc2d020c"><div class="ttname"><a href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#ac7f69347dd6eed92e5a71d9ecc2d020c">org.lightjason.agentspeak.agent.TestCUnifier.structurehash</a></div><div class="ttdeci">final void structurehash()</div><div class="ttdoc">literal value hashing </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d4d/TestCUnifier_8java_source.htm#l00110">TestCUnifier.java:110</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier_htm_aacf4fa48de324d2a72d887d0414b8a4b"><div class="ttname"><a href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#aacf4fa48de324d2a72d887d0414b8a4b">org.lightjason.agentspeak.agent.TestCUnifier.main</a></div><div class="ttdeci">static void main(final String[] p_args)</div><div class="ttdoc">manuell running test </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d4d/TestCUnifier_8java_source.htm#l00139">TestCUnifier.java:139</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00045">IBaseTest.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_a153155d721393465604d8e795ad2fc31"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">org.lightjason.agentspeak.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00056">IBaseTest.java:56</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral_htm"><div class="ttname"><a href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">org.lightjason.agentspeak.language.ILiteral</a></div><div class="ttdoc">literal interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/de4/ILiteral_8java_source.htm#l00039">ILiteral.java:39</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier_htm"><div class="ttname"><a href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm">org.lightjason.agentspeak.agent.TestCUnifier</a></div><div class="ttdoc">test for unification </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d4d/TestCUnifier_8java_source.htm#l00048">TestCUnifier.java:48</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral_htm_a8c8794cf359011383143ac0ba6a18b86"><div class="ttname"><a href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a8c8794cf359011383143ac0ba6a18b86">org.lightjason.agentspeak.language.ILiteral.orderedvalues</a></div><div class="ttdeci">Stream&lt; ITerm &gt; orderedvalues( @Nullable final IPath... p_path)</div><div class="ttdoc">returns a stream over the ordered values in sequential ordering </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath_htm_adcbbdb10315750231c09b30491b552fd"><div class="ttname"><a href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm#adcbbdb10315750231c09b30491b552fd">org.lightjason.agentspeak.common.CPath.from</a></div><div class="ttdeci">static IPath from( @Nonnull final String p_string)</div><div class="ttdoc">factor method to build path </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d76/CPath_8java_source.htm#l00165">CPath.java:165</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath_htm"><div class="ttname"><a href="../../d3/d99/classorg_1_1lightjason_1_1agentspeak_1_1common_1_1CPath.htm">org.lightjason.agentspeak.common.CPath</a></div><div class="ttdoc">class to create a path structure </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d76/CPath_8java_source.htm#l00052">CPath.java:52</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier_htm_a98ac9c167e34e9f8057203c283d46d63"><div class="ttname"><a href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a98ac9c167e34e9f8057203c283d46d63">org.lightjason.agentspeak.agent.TestCUnifier.literalvaluesequentialtraversing</a></div><div class="ttdeci">final void literalvaluesequentialtraversing()</div><div class="ttdoc">traversion of literal value content </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d4d/TestCUnifier_8java_source.htm#l00081">TestCUnifier.java:81</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral_htm_a7f59198401ff8cebe3e17971e3f0f36e"><div class="ttname"><a href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">org.lightjason.agentspeak.language.ILiteral.values</a></div><div class="ttdeci">Stream&lt; ITerm &gt; values(final IPath... p_path)</div><div class="ttdoc">returns a stream over value items </div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1common_htm"><div class="ttname"><a href="../../d0/d73/namespaceorg_1_1lightjason_1_1agentspeak_1_1common.htm">org.lightjason.agentspeak.common</a></div><div class="ttdef"><b>Definition:</b> <a href="../../da/d59/common_2CCommon_8java_source.htm#l00024">common/CCommon.java:24</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier_htm_a88eacc2f51afb450e4d696584410cecb"><div class="ttname"><a href="../../d3/d8b/classorg_1_1lightjason_1_1agentspeak_1_1agent_1_1TestCUnifier.htm#a88eacc2f51afb450e4d696584410cecb">org.lightjason.agentspeak.agent.TestCUnifier.literalvaluetraversing</a></div><div class="ttdeci">final void literalvaluetraversing()</div><div class="ttdoc">traversion of literal value content </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d4d/TestCUnifier_8java_source.htm#l00057">TestCUnifier.java:57</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash_htm_a9033d768204161976f9e40fe14ecc800"><div class="ttname"><a href="../../dc/d82/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1IStructureHash.htm#a9033d768204161976f9e40fe14ecc800">org.lightjason.agentspeak.language.IStructureHash.structurehash</a></div><div class="ttdeci">int structurehash()</div><div class="ttdoc">returns a hash value which defines a hash ove rthe structure </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral_htm"><div class="ttname"><a href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm">org.lightjason.agentspeak.language.CLiteral</a></div><div class="ttdoc">default generic literal class for agent beliefs a literal consists of a functor, an optional list of ...</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/de1/CLiteral_8java_source.htm#l00064">CLiteral.java:64</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral_htm_a02369911882164bb32d9c000308a3b59"><div class="ttname"><a href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a02369911882164bb32d9c000308a3b59">org.lightjason.agentspeak.language.CLiteral.parse</a></div><div class="ttdeci">static ILiteral parse( @Nonnull final String p_literal)</div><div class="ttdoc">factory </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/de1/CLiteral_8java_source.htm#l00259">CLiteral.java:259</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral_htm_a21c3b3bf99c549beac905342eb37602b"><div class="ttname"><a href="../../d6/d08/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CLiteral.htm#a21c3b3bf99c549beac905342eb37602b">org.lightjason.agentspeak.language.CLiteral.from</a></div><div class="ttdeci">static ILiteral from( @Nonnull final String p_functor, @Nullable final ITerm... p_values)</div><div class="ttdoc">factory </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/de1/CLiteral_8java_source.htm#l00161">CLiteral.java:161</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_dec76da749107e6237fc5efe278d5dd1.htm">agent</a></li><li class="navelem"><a class="el" href="../../d1/d4d/TestCUnifier_8java.htm">TestCUnifier.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
