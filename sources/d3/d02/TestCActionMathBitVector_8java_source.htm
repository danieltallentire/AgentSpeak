<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCActionMathBitVector.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d3/d02/TestCActionMathBitVector_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCActionMathBitVector.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/d02/TestCActionMathBitVector_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.action.builtin;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> cern.colt.bitvector.BitVector;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> cern.colt.matrix.DoubleMatrix1D;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> com.codepoetics.protonpack.StreamUtils;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProvider;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProviderRunner;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.UseDataProvider;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.ImmutableTriple;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.Triple;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Before;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.runner.RunWith;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">IAction</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d4/d24/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CAnd.htm">CAnd</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d0/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CBoolValue.htm">CBoolValue</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../dc/d63/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCopy.htm">CCopy</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d6/d8b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCreate.htm">CCreate</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../db/d33/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CFalseCount.htm">CFalseCount</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../db/d04/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CHammingDistance.htm">CHammingDistance</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d6/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNAnd.htm">CNAnd</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d5/d72/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNot.htm">CNot</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d3/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1COr.htm">COr</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d7/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSize.htm">CSize</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d8/d62/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CTrueCount.htm">CTrueCount</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../dc/d5d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CXor.htm">CXor</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../df/ddf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSet.htm">CSet</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d4/d33/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CClear.htm">CClear</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d7/dbf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CRange.htm">CRange</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d6/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNumericValue.htm">CNumericValue</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../d1/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToList.htm">CToList</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">vector</a>.<a class="code" href="../../dc/d74/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToBlas.htm">CToBlas</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">execution</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">import</span> java.util.*;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;@RunWith( DataProviderRunner.class )</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm">   73</a></span>&#160;public final class <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm">TestCActionMathBitVector</a> extends <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#ab7194ddb352ca59e864ec330af1f84f7">   79</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> BitVector VECTOR1 = <span class="keyword">new</span> BitVector( 3 );</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a072f2a6dfa42411592b7448dbad1dc78">   84</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> BitVector VECTOR2 = <span class="keyword">new</span> BitVector( 3 );</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    @Before</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a1098209ce6ffccd9222ab9fbf210bff5">   91</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a1098209ce6ffccd9222ab9fbf210bff5">initialize</a>()</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        VECTOR1.put( 0, <span class="keyword">true</span> );</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        VECTOR1.put( 1, <span class="keyword">false</span> );</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        VECTOR1.put( 2, <span class="keyword">false</span> );</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        VECTOR2.put( 0, <span class="keyword">false</span> );</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        VECTOR2.put( 1, <span class="keyword">false</span> );</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        VECTOR2.put( 2, <span class="keyword">true</span> );</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    @DataProvider</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a3c472754daa916465da442f3c41d2d33">  107</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Object[] <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a3c472754daa916465da442f3c41d2d33">generator</a>()</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> testcase(</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                Stream.of( VECTOR1, VECTOR2 ),</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                Stream.of(</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        <a class="code" href="../../d3/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount.htm">CFalseCount</a>.class,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <a class="code" href="../../de/d51/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy.htm">CCopy</a>.class,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        <a class="code" href="../../d1/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount.htm">CTrueCount</a>.class,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        <a class="code" href="../../dd/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize.htm">CSize</a>.class,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        <a class="code" href="../../dd/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot.htm">CNot</a>.class,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        <a class="code" href="../../d7/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr.htm">COr</a>.class,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        <a class="code" href="../../dc/d07/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd.htm">CAnd</a>.class,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        <a class="code" href="../../d1/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd.htm">CNAnd</a>.class,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        <a class="code" href="../../d7/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance.htm">CHammingDistance</a>.class,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        <a class="code" href="../../d3/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor.htm">CXor</a>.class</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                ),</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                Stream.of( 2D, 2D ),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                Stream.of( VECTOR1, VECTOR2 ),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                Stream.of( 1D, 1D ),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                Stream.of( 3, 3 ),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                Stream.of(),</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                Stream.of(),</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                Stream.of(),</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                Stream.of(),</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                Stream.of( 2D ),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                Stream.of()</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        ).toArray();</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    @SafeVarargs</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;varargs&quot;</span> )</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a978a23114640a4dd6519c3f08d176855">  149</a></span>&#160;    private static Stream&lt;Object&gt; testcase( final Stream&lt;Object&gt; p_input, final Stream&lt;Class&lt;?&gt;&gt; p_classes, final Stream&lt;Object&gt;... p_classresult )</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_input = p_input.map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() );</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">return</span> StreamUtils.zip(</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                p_classes,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                Arrays.stream( p_classresult ),</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            ( i, j ) -&gt; <span class="keyword">new</span> ImmutableTriple&lt;&gt;( l_input, i, j )</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        );</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    @Test</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    @UseDataProvider( <span class="stringliteral">&quot;generator&quot;</span> )</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a5b1d8616c37f812b4ddf53e70713c780">  169</a></span>&#160;    public final <span class="keywordtype">void</span> action( final Triple&lt;List&lt;<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>&gt;, Class&lt;? extends <a class="code" href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">IAction</a>&gt;, Stream&lt;Object&gt;&gt; p_input )</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            throws IllegalAccessException, InstantiationException</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        p_input.getMiddle().newInstance().execute(</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            p_input.getLeft(),</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            l_return</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        );</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                p_input.getMiddle().toGenericString(),</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                p_input.getRight().toArray()</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        );</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    @Test</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56b561384707d03e08bd31bfc796b6a6">  191</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56b561384707d03e08bd31bfc796b6a6">create</a>()</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">CCreate</a>().<a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">execute</a>(</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            Stream.of( 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            l_return</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        );</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof BitVector );</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitVector&gt;raw().size(), 3 );</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    @Test</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a2882e051ad3d2fe766c3da8536ff6b6e">  210</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a2882e051ad3d2fe766c3da8536ff6b6e">boolValue</a>()</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm">CBoolValue</a>().<a class="code" href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm#ad601376fba3ab5b87d6557ccfb0fc4d7">execute</a>(</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            Stream.of( VECTOR2, 0 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            l_return</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        );</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Boolean&gt;raw(), false );</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    @Test</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a9f553a0b75973ac69cdb28cf903f8199">  227</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <span class="keyword">set</span>()</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d2/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet.htm">CSet</a>().<a class="code" href="../../d2/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet.htm#a1a8c2e03c1452b1c22aca0c1ddca7dfe">execute</a>(</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            Stream.of( VECTOR2, <span class="keyword">true</span>, 0, 1 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        );</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        Assert.assertEquals( VECTOR2.get( 0 ), true );</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        Assert.assertEquals( VECTOR2.get( 1 ), true );</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    @Test</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a222c0ba6a798f3dbb0941e53ef007659">  243</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a222c0ba6a798f3dbb0941e53ef007659">clear</a>()</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d2/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear.htm">CClear</a>().<a class="code" href="../../d2/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear.htm#a3932447fbaeaa6135cf6a4ed18f94115">execute</a>(</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            Stream.of( VECTOR2, 0 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        );</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        Assert.assertEquals( VECTOR2.get( 0 ), false );</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    @Test</div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#ad7f85eb0b9a8fbb2a499413b0025a35b">  258</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#ad7f85eb0b9a8fbb2a499413b0025a35b">range</a>()</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange.htm">CRange</a>().<a class="code" href="../../dc/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange.htm#a47d97fd4b16cd162aac6bd5e20dfd431">execute</a>(</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            Stream.of( VECTOR2, 0, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            l_return</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        );</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitVector&gt;raw(), VECTOR2 );</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    @Test</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a0c60684d892ac8584d089ed5247e4010">  276</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a0c60684d892ac8584d089ed5247e4010">numericvalue</a>()</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm">CNumericValue</a>().<a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm#a1164760401c709442c3d6bd44183f7eb">execute</a>(</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            Stream.of( VECTOR1, 1 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            l_return</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        );</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Number&gt;raw(), 0D );</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    @Test</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56d8b1ebc5190edc1e810374bbdee12c">  293</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56d8b1ebc5190edc1e810374bbdee12c">tolist</a>()</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    {</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList.htm">CToList</a>().<a class="code" href="../../d1/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList.htm#ab7d2dabbb6c7c28dc6a1445bc4c081de">execute</a>(</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            Stream.of( VECTOR1 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            l_return</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        );</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof List&lt;?&gt; );</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1D, 0D, 0D ).toArray() );</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    @Test</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a5bd44a8bbfbc74ada2d8c16cd4051475">  312</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a5bd44a8bbfbc74ada2d8c16cd4051475">toblas</a>()</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm">CToBlas</a>().<a class="code" href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm#a513fe8d2e2604510d9d26caf0db7b235">execute</a>(</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            Stream.of( VECTOR2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            l_return</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        );</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof DoubleMatrix1D );</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;DoubleMatrix1D&gt;raw().toArray(), Stream.of( 0, 0, 1 ).mapToDouble( i -&gt; i ).toArray(), 0 );</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    }</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a45ae1851ee2bd0a43141017727df0104">  332</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a45ae1851ee2bd0a43141017727df0104">main</a>( <span class="keyword">final</span> String[] p_args )</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm">TestCActionMathBitVector</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">invoketest</a>();</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    }</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNAnd_htm"><div class="ttname"><a href="../../d6/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNAnd.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CNAnd</a></div><div class="ttdoc">performs the logical not-and operation to all bit vectors. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d21/vector_2CNAnd_8java_source.htm#l00040">vector/CNAnd.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue_htm_a1164760401c709442c3d6bd44183f7eb"><div class="ttname"><a href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm#a1164760401c709442c3d6bd44183f7eb">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNumericValue.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dec/matrix_2CNumericValue_8java_source.htm#l00075">matrix/CNumericValue.java:75</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSize_htm"><div class="ttname"><a href="../../d7/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSize.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CSize</a></div><div class="ttdoc">returns the size of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d13/math_2bit_2vector_2CSize_8java_source.htm#l00048">math/bit/vector/CSize.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CAnd_htm"><div class="ttname"><a href="../../d4/d24/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CAnd.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CAnd</a></div><div class="ttdoc">performs the logical and operation to all bit vectors. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de7/math_2bit_2vector_2CAnd_8java_source.htm#l00040">math/bit/vector/CAnd.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNot_htm"><div class="ttname"><a href="../../d5/d72/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNot.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CNot</a></div><div class="ttdoc">performs the logical not operation to all bit vectors. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d63/math_2bit_2vector_2CNot_8java_source.htm#l00047">math/bit/vector/CNot.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance_htm"><div class="ttname"><a href="../../d7/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CHammingDistance</a></div><div class="ttdoc">calculates the hamming distance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d07/matrix_2CHammingDistance_8java_source.htm#l00050">matrix/CHammingDistance.java:50</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_htm"><div class="ttname"><a href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">org.lightjason.agentspeak.action.builtin.math</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CClear_htm"><div class="ttname"><a href="../../d4/d33/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CClear.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CClear</a></div><div class="ttdoc">sets the indexed bit to false within the bit vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d70/math_2bit_2vector_2CClear_8java_source.htm#l00049">math/bit/vector/CClear.java:49</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas_htm"><div class="ttname"><a href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToBlas</a></div><div class="ttdoc">converts the bit matrix to a blas matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd0/matrix_2CToBlas_8java_source.htm#l00055">matrix/CToBlas.java:55</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00045">IBaseTest.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a0c60684d892ac8584d089ed5247e4010"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a0c60684d892ac8584d089ed5247e4010">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.numericvalue</a></div><div class="ttdeci">final void numericvalue()</div><div class="ttdoc">test numericvalue </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00276">TestCActionMathBitVector.java:276</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm_a2fbdd035b68cfb71c6ee6bd92c799cdf"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">org.lightjason.agentspeak.language.execution.IContext.EMPTYPLAN</a></div><div class="ttdeci">IContext EMPTYPLAN</div><div class="ttdoc">empty context with plan </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00047">IContext.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_a153155d721393465604d8e795ad2fc31"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">org.lightjason.agentspeak.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00056">IBaseTest.java:56</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd_htm"><div class="ttname"><a href="../../dc/d07/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd.htm">org.lightjason.agentspeak.action.builtin.bool.CAnd</a></div><div class="ttdoc">combines all arguments to a single result with the and-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d8a/bool_2CAnd_8java_source.htm#l00048">bool/CAnd.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a2882e051ad3d2fe766c3da8536ff6b6e"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a2882e051ad3d2fe766c3da8536ff6b6e">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.boolValue</a></div><div class="ttdeci">final void boolValue()</div><div class="ttdoc">test boolean value </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00210">TestCActionMathBitVector.java:210</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm_ae8877b7dcb9693c3e108a4dff67549f5"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">org.lightjason.agentspeak.action.builtin.collection.list.CCreate.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00068">collection/list/CCreate.java:68</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue_htm"><div class="ttname"><a href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNumericValue</a></div><div class="ttdoc">returns for the index tuple a numeric value. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dec/matrix_2CNumericValue_8java_source.htm#l00051">matrix/CNumericValue.java:51</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot_htm"><div class="ttname"><a href="../../dd/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot.htm">org.lightjason.agentspeak.action.builtin.bool.CNot</a></div><div class="ttdoc">inverts all argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/ddb/bool_2CNot_8java_source.htm#l00048">bool/CNot.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCreate_htm"><div class="ttname"><a href="../../d6/d8b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CCreate</a></div><div class="ttdoc">creates a bit vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d8d/math_2bit_2vector_2CCreate_8java_source.htm#l00048">math/bit/vector/CCreate.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_htm"><div class="ttname"><a href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">org.lightjason.agentspeak.action.builtin</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_htm"><div class="ttname"><a href="../../dc/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector</a></div><div class="ttdef"><b>Definition:</b> <a href="../../de/de7/math_2bit_2vector_2CAnd_8java_source.htm#l00024">math/bit/vector/CAnd.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a222c0ba6a798f3dbb0941e53ef007659"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a222c0ba6a798f3dbb0941e53ef007659">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.clear</a></div><div class="ttdeci">final void clear()</div><div class="ttdoc">test clear </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00243">TestCActionMathBitVector.java:243</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_htm"><div class="ttname"><a href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">org.lightjason.agentspeak.language.execution</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a56d8b1ebc5190edc1e810374bbdee12c"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56d8b1ebc5190edc1e810374bbdee12c">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.tolist</a></div><div class="ttdeci">final void tolist()</div><div class="ttdoc">test toList </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00293">TestCActionMathBitVector.java:293</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a56b561384707d03e08bd31bfc796b6a6"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a56b561384707d03e08bd31bfc796b6a6">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.create</a></div><div class="ttdeci">final void create()</div><div class="ttdoc">test create </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00191">TestCActionMathBitVector.java:191</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCopy_htm"><div class="ttname"><a href="../../dc/d63/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CCopy.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CCopy</a></div><div class="ttdoc">returns a copy of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/de6/bit_2vector_2CCopy_8java_source.htm#l00048">bit/vector/CCopy.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">org.lightjason.agentspeak.language.execution.IContext</a></div><div class="ttdoc">execution context with local data </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00042">IContext.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_ad7f85eb0b9a8fbb2a499413b0025a35b"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#ad7f85eb0b9a8fbb2a499413b0025a35b">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.range</a></div><div class="ttdeci">final void range()</div><div class="ttdoc">test range </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00258">TestCActionMathBitVector.java:258</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction_htm"><div class="ttname"><a href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">org.lightjason.agentspeak.action.IAction</a></div><div class="ttdoc">external action interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d9f/IAction_8java_source.htm#l00038">IAction.java:38</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a3c472754daa916465da442f3c41d2d33"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a3c472754daa916465da442f3c41d2d33">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.generator</a></div><div class="ttdeci">static Object [] generator()</div><div class="ttdoc">data provider generator </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00107">TestCActionMathBitVector.java:107</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet_htm"><div class="ttname"><a href="../../d2/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet.htm">org.lightjason.agentspeak.action.builtin.collection.list.CSet</a></div><div class="ttdoc">adds an element to the list. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d81/collection_2list_2CSet_8java_source.htm#l00046">collection/list/CSet.java:46</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount_htm"><div class="ttname"><a href="../../d1/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CTrueCount</a></div><div class="ttdoc">returns the number of true values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d42/matrix_2CTrueCount_8java_source.htm#l00047">matrix/CTrueCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNumericValue_htm"><div class="ttname"><a href="../../d6/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CNumericValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CNumericValue</a></div><div class="ttdoc">returns for the index a numeric value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d9e/vector_2CNumericValue_8java_source.htm#l00050">vector/CNumericValue.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor_htm"><div class="ttname"><a href="../../d3/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor.htm">org.lightjason.agentspeak.action.builtin.bool.CXor</a></div><div class="ttdoc">combines all arguments to a single result with the xor-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d76/bool_2CXor_8java_source.htm#l00048">bool/CXor.java:48</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.collection.list.CCreate</a></div><div class="ttdoc">creates a list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00050">collection/list/CCreate.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList_htm"><div class="ttname"><a href="../../d1/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList.htm">org.lightjason.agentspeak.action.builtin.collection.set.CToList</a></div><div class="ttdoc">converts a set to a list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d03/collection_2set_2CToList_8java_source.htm#l00048">collection/set/CToList.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear_htm"><div class="ttname"><a href="../../d2/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear.htm">org.lightjason.agentspeak.action.builtin.collection.CClear</a></div><div class="ttdoc">clears all elements of the collection. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d4a/collection_2CClear_8java_source.htm#l00048">collection/CClear.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas_htm_a513fe8d2e2604510d9d26caf0db7b235"><div class="ttname"><a href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm#a513fe8d2e2604510d9d26caf0db7b235">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToBlas.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd0/matrix_2CToBlas_8java_source.htm#l00079">matrix/CToBlas.java:79</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange_htm_a47d97fd4b16cd162aac6bd5e20dfd431"><div class="ttname"><a href="../../dc/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange.htm#a47d97fd4b16cd162aac6bd5e20dfd431">org.lightjason.agentspeak.action.builtin.collection.list.CRange.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d1f/collection_2list_2CRange_8java_source.htm#l00078">collection/list/CRange.java:78</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CXor_htm"><div class="ttname"><a href="../../dc/d5d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CXor.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CXor</a></div><div class="ttdoc">performs the logical xor operation to all bit vectors. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d7a/math_2bit_2vector_2CXor_8java_source.htm#l00040">math/bit/vector/CXor.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToList_htm"><div class="ttname"><a href="../../d1/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToList.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CToList</a></div><div class="ttdoc">returns the long values of the bit vector as list. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0c/math_2bit_2vector_2CToList_8java_source.htm#l00050">math/bit/vector/CToList.java:50</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_htm"><div class="ttname"><a href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">org.lightjason.agentspeak.action</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue_htm_ad601376fba3ab5b87d6557ccfb0fc4d7"><div class="ttname"><a href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm#ad601376fba3ab5b87d6557ccfb0fc4d7">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CBoolValue.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d9f/matrix_2CBoolValue_8java_source.htm#l00075">matrix/CBoolValue.java:75</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount_htm"><div class="ttname"><a href="../../d3/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CFalseCount</a></div><div class="ttdoc">returns the number of false values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dfc/matrix_2CFalseCount_8java_source.htm#l00047">matrix/CFalseCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a5bd44a8bbfbc74ada2d8c16cd4051475"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a5bd44a8bbfbc74ada2d8c16cd4051475">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.toblas</a></div><div class="ttdeci">final void toblas()</div><div class="ttdoc">test toblas </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00312">TestCActionMathBitVector.java:312</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSet_htm"><div class="ttname"><a href="../../df/ddf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CSet.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CSet</a></div><div class="ttdoc">sets bit position by index and value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d2e/math_2bit_2vector_2CSet_8java_source.htm#l00050">math/bit/vector/CSet.java:50</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm_a037c4a7c6111fafc70081ed36d929833"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">org.lightjason.agentspeak.language.ITerm.raw</a></div><div class="ttdeci">&lt; T &gt; T raw()</div><div class="ttdoc">cast to any raw value type </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CRange_htm"><div class="ttname"><a href="../../d7/dbf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CRange.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CRange</a></div><div class="ttdoc">returns a new bit vector, based on the current. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d20/math_2bit_2vector_2CRange_8java_source.htm#l00052">math/bit/vector/CRange.java:52</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToBlas_htm"><div class="ttname"><a href="../../dc/d74/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CToBlas.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CToBlas</a></div><div class="ttdoc">converts the bit vector to a blas vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d0b/vector_2CToBlas_8java_source.htm#l00054">vector/CToBlas.java:54</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector</a></div><div class="ttdoc">test for bit vector actions </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00073">TestCActionMathBitVector.java:73</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a1098209ce6ffccd9222ab9fbf210bff5"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a1098209ce6ffccd9222ab9fbf210bff5">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.initialize</a></div><div class="ttdeci">final void initialize()</div><div class="ttdoc">initialize </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00091">TestCActionMathBitVector.java:91</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm_a95c5d82dfc6d8ba46b478b1e5d34f1e5"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">org.lightjason.agentspeak.language.CRawTerm.from</a></div><div class="ttdeci">static&lt; N &gt; CRawTerm&lt; N &gt; from(final N p_value)</div><div class="ttdoc">factory for a raw term </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00104">CRawTerm.java:104</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CFalseCount_htm"><div class="ttname"><a href="../../db/d33/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CFalseCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CFalseCount</a></div><div class="ttdoc">returns the number of false values. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d76/vector_2CFalseCount_8java_source.htm#l00047">vector/CFalseCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CTrueCount_htm"><div class="ttname"><a href="../../d8/d62/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CTrueCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CTrueCount</a></div><div class="ttdoc">returns the number of true values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2c/vector_2CTrueCount_8java_source.htm#l00047">vector/CTrueCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1COr_htm"><div class="ttname"><a href="../../d3/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1COr.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.COr</a></div><div class="ttdoc">performs the logical or operation to all bit vectors. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d38/math_2bit_2vector_2COr_8java_source.htm#l00040">math/bit/vector/COr.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList_htm_ab7d2dabbb6c7c28dc6a1445bc4c081de"><div class="ttname"><a href="../../d1/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1set_1_1CToList.htm#ab7d2dabbb6c7c28dc6a1445bc4c081de">org.lightjason.agentspeak.action.builtin.collection.set.CToList.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d03/collection_2set_2CToList_8java_source.htm#l00072">collection/set/CToList.java:72</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_htm"><div class="ttname"><a href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">org.lightjason.agentspeak.action.builtin.math.bit</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue_htm"><div class="ttname"><a href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CBoolValue</a></div><div class="ttdoc">returns for the index tuple a boolean value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d9f/matrix_2CBoolValue_8java_source.htm#l00051">matrix/CBoolValue.java:51</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear_htm_a3932447fbaeaa6135cf6a4ed18f94115"><div class="ttname"><a href="../../d2/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CClear.htm#a3932447fbaeaa6135cf6a4ed18f94115">org.lightjason.agentspeak.action.builtin.collection.CClear.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d4a/collection_2CClear_8java_source.htm#l00064">collection/CClear.java:64</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector_htm_a45ae1851ee2bd0a43141017727df0104"><div class="ttname"><a href="../../de/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitVector.htm#a45ae1851ee2bd0a43141017727df0104">org.lightjason.agentspeak.action.builtin.TestCActionMathBitVector.main</a></div><div class="ttdeci">static void main(final String[] p_args)</div><div class="ttdoc">test call </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d02/TestCActionMathBitVector_8java_source.htm#l00332">TestCActionMathBitVector.java:332</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr_htm"><div class="ttname"><a href="../../d7/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr.htm">org.lightjason.agentspeak.action.builtin.bool.COr</a></div><div class="ttdoc">combines all arguments to a single result with the or-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9e/bool_2COr_8java_source.htm#l00048">bool/COr.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange_htm"><div class="ttname"><a href="../../dc/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CRange.htm">org.lightjason.agentspeak.action.builtin.collection.list.CRange</a></div><div class="ttdoc">creates a list with a integer ranged list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d1f/collection_2list_2CRange_8java_source.htm#l00053">collection/list/CRange.java:53</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CHammingDistance_htm"><div class="ttname"><a href="../../db/d04/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CHammingDistance.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CHammingDistance</a></div><div class="ttdoc">calculates the hamming distance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d09/vector_2CHammingDistance_8java_source.htm#l00050">vector/CHammingDistance.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet_htm_a1a8c2e03c1452b1c22aca0c1ddca7dfe"><div class="ttname"><a href="../../d2/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CSet.htm#a1a8c2e03c1452b1c22aca0c1ddca7dfe">org.lightjason.agentspeak.action.builtin.collection.list.CSet.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d81/collection_2list_2CSet_8java_source.htm#l00070">collection/list/CSet.java:70</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy_htm"><div class="ttname"><a href="../../de/d51/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CCopy</a></div><div class="ttdoc">returns a copy of the matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d26/bit_2matrix_2CCopy_8java_source.htm#l00048">bit/matrix/CCopy.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize_htm"><div class="ttname"><a href="../../dd/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize.htm">org.lightjason.agentspeak.action.builtin.collection.CSize</a></div><div class="ttdoc">returns the size of the collection. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d19/collection_2CSize_8java_source.htm#l00050">collection/CSize.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd_htm"><div class="ttname"><a href="../../d1/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNAnd</a></div><div class="ttdoc">performs the logical not-and operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d48/matrix_2CNAnd_8java_source.htm#l00040">matrix/CNAnd.java:40</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">org.lightjason.agentspeak.language.CRawTerm</a></div><div class="ttdoc">term structure for simple datatypes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00045">CRawTerm.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CBoolValue_htm"><div class="ttname"><a href="../../d0/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1vector_1_1CBoolValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.vector.CBoolValue</a></div><div class="ttdoc">returns for the index a boolean value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d5c/vector_2CBoolValue_8java_source.htm#l00049">vector/CBoolValue.java:49</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_5c7d9bd26293bcba3b50ce1327e8211c.htm">action</a></li><li class="navelem"><a class="el" href="../../dir_f40dbd565273397ba32344fb1fccd977.htm">builtin</a></li><li class="navelem"><a class="el" href="../../d3/d02/TestCActionMathBitVector_8java.htm">TestCActionMathBitVector.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
