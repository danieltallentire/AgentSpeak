<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCActionGraph.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d5/d5f/TestCActionGraph_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCActionGraph.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d5/d5f/TestCActionGraph_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.action.builtin;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> cern.colt.matrix.impl.DenseDoubleMatrix2D;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> com.codepoetics.protonpack.StreamUtils;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.DirectedSparseGraph;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.DirectedSparseMultigraph;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.Graph;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.SparseGraph;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.SparseMultigraph;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> edu.uci.ics.jung.graph.UndirectedSparseGraph;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d3/d4c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeMultiple.htm">CAddEdgeMultiple</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d6/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeSingle.htm">CAddEdgeSingle</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../df/d6e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexMultiple.htm">CAddVertexMultiple</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d1/dd6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexSingle.htm">CAddVertexSingle</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d9/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix.htm">CAdjacencyMatrix</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d2/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge.htm">CContainsEdge</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d4/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex.htm">CContainsVertex</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d2/db3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CCreate.htm">CCreate</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d8/ddd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeMultiple.htm">CDegreeMultiple</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d2/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeSingle.htm">CDegreeSingle</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d5/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDistancePath.htm">CDistancePath</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d9/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount.htm">CEdgeCount</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../db/dff/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListMultiple.htm">CEdgeListMultiple</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../de/d1a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListSingle.htm">CEdgeListSingle</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d4/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges.htm">CEdges</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/d92/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointMultiple.htm">CEndPointMultiple</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/dbc/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointSingle.htm">CEndPointSingle</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dd/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeMultiple.htm">CFindEdgeMultiple</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeSingle.htm">CFindEdgeSingle</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d4/dec/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeMultiple.htm">CInDegreeMultiple</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dd/d2c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeSingle.htm">CInDegreeSingle</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d5/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesMultiple.htm">CInEdgesMultiple</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d4/d4b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesSingle.htm">CInEdgesSingle</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d1/d5a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountMultiple.htm">CIncidentCountMultiple</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../df/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountSingle.htm">CIncidentCountSingle</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../de/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesMultiple.htm">CIncidentVerticesMultiple</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d1/dac/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesSingle.htm">CIncidentVerticesSingle</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d8/dcf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentMultiple.htm">CIsIncidentMultiple</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d8/db9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentSingle.htm">CIsIncidentSingle</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../df/d70/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborMultiple.htm">CIsNeighborMultiple</a>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d6/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborSingle.htm">CIsNeighborSingle</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d4/dd1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorMultiple.htm">CIsPredecessorMultiple</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d5/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorSingle.htm">CIsPredecessorSingle</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d6/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorMultiple.htm">CIsSuccessorMultiple</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d6/d9f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorSingle.htm">CIsSuccessorSingle</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/dbd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountMultiple.htm">CNeighborsCountMultiple</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d3/dc1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountSingle.htm">CNeighborsCountSingle</a>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d8/d25/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsMultiple.htm">CNeighborsMultiple</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dd/d20/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsSingle.htm">CNeighborsSingle</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../de/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeMultiple.htm">COppositeMultiple</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/d6d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeSingle.htm">COppositeSingle</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d6/dd2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeMultiple.htm">COutDegreeMultiple</a>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d1/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeSingle.htm">COutDegreeSingle</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d9/db7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesMultiple.htm">COutEdgesMultiple</a>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d7/d84/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesSingle.htm">COutEdgesSingle</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d1/df2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountMultiple.htm">CPredecessorCountMultiple</a>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../df/d19/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountSingle.htm">CPredecessorCountSingle</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d0/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeMultiple.htm">CRemoveEdgeMultiple</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d0/db0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeSingle.htm">CRemoveEdgeSingle</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d8/d71/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexMultiple.htm">CRemoveVertexMultiple</a>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dd/d8a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexSingle.htm">CRemoveVertexSingle</a>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d2/d3b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CShortestPath.htm">CShortestPath</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm">CSpanningTree</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dc/d77/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountMultiple.htm">CSuccessorCountMultiple</a>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../d5/d9d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountSingle.htm">CSuccessorCountSingle</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../df/d41/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount.htm">CVertexCount</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">graph</a>.<a class="code" href="../../dd/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices.htm">CVertices</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">execution</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">import</span> java.util.Collections;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">import</span> java.util.List;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">import</span> java.util.Map;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">import</span> java.util.stream.IntStream;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm">  111</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm">TestCActionGraph</a> <span class="keyword">extends</span> <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    @Test</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6598dd04110fa6624c1979fad158f046">  118</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6598dd04110fa6624c1979fad158f046">create</a>()</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">CCreate</a>().<a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">execute</a>(</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            Stream.of( <span class="stringliteral">&quot;sparse&quot;</span>, <span class="stringliteral">&quot;SPARSEMULTI&quot;</span>, <span class="stringliteral">&quot;DIRECTEDSPARSE&quot;</span>, <span class="stringliteral">&quot;DIRECTEDSPARSEMULTI&quot;</span>, <span class="stringliteral">&quot;UNDIRECTEDSPARSE&quot;</span>, <span class="stringliteral">&quot;UNDIRECTEDSPARSEMULTI&quot;</span> )</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            l_return</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        );</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        Assert.assertEquals( l_return.size(), 6 );</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        Assert.assertTrue( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).allMatch( i -&gt; i instanceof Graph&lt;?, ?&gt; ) );</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    @Test</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6277dc451044f4d4b739c87387dbdb05">  139</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6277dc451044f4d4b739c87387dbdb05">addvertexsingle</a>()</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keyword">final</span> Graph&lt;?, ?&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">final</span> Graph&lt;?, ?&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        IntStream.range( 0, 5 )</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                 .boxed()</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                 .forEach( i -&gt;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                               <span class="keyword">new</span> <a class="code" href="../../d1/dd6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexSingle.htm">CAddVertexSingle</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#ac735c0eb544971808786a9b33776ffe7">execute</a>(</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                   <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                   Stream.of( i, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                   Collections.emptyList()</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                               ) );</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        Assert.assertArrayEquals( l_graph1.getVertices().toArray(), IntStream.range( 0, 5 ).boxed().toArray() );</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        Assert.assertArrayEquals( l_graph2.getVertices().toArray(), IntStream.range( 0, 5 ).boxed().toArray() );</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    @Test</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a2af0133efc8a245d6910daadbac4a69f">  162</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a2af0133efc8a245d6910daadbac4a69f">addvertexmultiple</a>()</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">final</span> Graph&lt;?, ?&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/d6e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexMultiple.htm">CAddVertexMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;x&quot;</span>, <span class="stringliteral">&quot;y&quot;</span>, <span class="stringliteral">&quot;z&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        Assert.assertArrayEquals( l_graph.getVertices().toArray(), Stream.of( <span class="stringliteral">&quot;x&quot;</span>, <span class="stringliteral">&quot;y&quot;</span>, <span class="stringliteral">&quot;z&quot;</span> ).toArray() );</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    @Test</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7e803946af2887eede77d3b0a6b87fc9">  181</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7e803946af2887eede77d3b0a6b87fc9">addedgesingle</a>()</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeSingle.htm">CAddEdgeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            Stream.of( <span class="stringliteral">&quot;xy&quot;</span>, 1, 2, l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        );</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeSingle.htm">CAddEdgeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            Stream.of( <span class="stringliteral">&quot;bar&quot;</span>, 4, 5, l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        );</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        Assert.assertEquals( l_graph.getEdgeCount(), 2 );</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        Assert.assertEquals( (<span class="keywordtype">long</span>) l_graph.getEndpoints( <span class="stringliteral">&quot;xy&quot;</span> ).getFirst(), 1 );</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        Assert.assertEquals( (<span class="keywordtype">long</span>) l_graph.getEndpoints( <span class="stringliteral">&quot;xy&quot;</span> ).getSecond(), 2 );</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        Assert.assertEquals( (<span class="keywordtype">long</span>) l_graph.getEndpoints( <span class="stringliteral">&quot;bar&quot;</span> ).getFirst(), 4 );</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        Assert.assertEquals( (<span class="keywordtype">long</span>) l_graph.getEndpoints( <span class="stringliteral">&quot;bar&quot;</span> ).getSecond(), 5 );</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    @Test</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adb57a8e269e93043d76f9ed3ec9e45dd">  209</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adb57a8e269e93043d76f9ed3ec9e45dd">addedgemultiple</a>()</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d3/d4c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeMultiple.htm">CAddEdgeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;foo&quot;</span>, 1, 1, <span class="stringliteral">&quot;bar&quot;</span>, 1, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        );</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        Assert.assertArrayEquals( l_graph.getEdges().toArray(), Stream.of( <span class="stringliteral">&quot;bar&quot;</span>, <span class="stringliteral">&quot;foo&quot;</span> ).toArray() );</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    @Test</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a110090c0055e2a5c3a8baea6fbaea8bd">  228</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a110090c0055e2a5c3a8baea6fbaea8bd">vertexcount</a>()</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        IntStream.range( 0, 5 )</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                 .boxed()</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                 .forEach( l_graph::addVertex );</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/d41/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount.htm">CVertexCount</a>().<a class="code" href="../../df/d41/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount.htm#ac98897baaaca63a76f82f615e7133469">execute</a>(</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            Stream.of( l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            l_return</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        );</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Number&gt;raw(), (double) l_graph.getVertexCount() );</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    @Test</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad0b9d77887baec5a804b5bf2f2c7763f">  252</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad0b9d77887baec5a804b5bf2f2c7763f">edgecount</a>()</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;a&quot;</span>, 0, 1 );</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;b&quot;</span>, 0, 2 );</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;c&quot;</span>, 1, 3 );</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;d&quot;</span>, 3, 4 );</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount.htm">CEdgeCount</a>().<a class="code" href="../../d9/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount.htm#a8983bff93a147258578908cf0632235d">execute</a>(</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            Stream.of( l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            l_return</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        );</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Number&gt;raw(), 4D );</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    @Test</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a76288f0ee922524d7928a512f96390b9">  278</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a76288f0ee922524d7928a512f96390b9">vertices</a>()</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        IntStream.range( 0, 5 )</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                 .boxed()</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                 .forEach( l_graph::addVertex );</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices.htm">CVertices</a>().<a class="code" href="../../dd/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices.htm#a52210d6acae508a13e5188003b003063">execute</a>(</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            Stream.of( l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            l_return</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        );</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), IntStream.range( 0, 5 ).boxed().toArray() );</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    @Test</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a4f0e6ed0f68b84f807104b86be4a2f06">  302</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a4f0e6ed0f68b84f807104b86be4a2f06">edges</a>()</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;a&quot;</span>, 0, 1 );</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;b&quot;</span>, 0, 2 );</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;c&quot;</span>, 1, 3 );</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;d&quot;</span>, 3, 4 );</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges.htm">CEdges</a>().<a class="code" href="../../d4/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges.htm#a9531a3cedd01169e141e798a858b3ece">execute</a>(</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            Stream.of( l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            l_return</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        );</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;a&quot;</span>, <span class="stringliteral">&quot;b&quot;</span>, <span class="stringliteral">&quot;c&quot;</span>, <span class="stringliteral">&quot;d&quot;</span> ).toArray() );</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    @Test</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab5a782c8b2b4e0d7b5882b1e8592bad3">  327</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab5a782c8b2b4e0d7b5882b1e8592bad3">adjacencymatrix</a>()</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    {</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;x&quot;</span>, 1, 1 );</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;y&quot;</span>, 1, 2 );</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;z&quot;</span>, 1, 5 );</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;xx&quot;</span>, 2, 3 );</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;yy&quot;</span>, 2, 5 );</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;xxx&quot;</span>, 3, 4 );</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;xxxx&quot;</span>, 4, 5 );</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;yyyy&quot;</span>, 4, 6 );</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix.htm">CAdjacencyMatrix</a>().<a class="code" href="../../d9/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix.htm#a05ef85eea335b3e1e2fa88656d48d18c">execute</a>(</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            Stream.of( 1, l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            l_return</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        );</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1, 2, 3, 4, 5, 6 ).toArray() );</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw(), <span class="keyword">new</span> DenseDoubleMatrix2D( <span class="keyword">new</span> <span class="keywordtype">double</span>[][]{</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            {2, 1, 0, 0, 1, 0}, {1, 0, 1, 0, 1, 0}, {0, 1, 0, 1, 0, 0},</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            {0, 0, 1, 0, 1, 1}, {1, 1, 0, 1, 0, 0}, {0, 0, 0, 1, 0, 0}</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        } ) );</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    @Test</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9d94e3809440ccdbb269f028d0ee7fdf">  365</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9d94e3809440ccdbb269f028d0ee7fdf">containsedge</a>()</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;ooo&quot;</span>, 1, 2 );</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;xxx&quot;</span>, 1, 2 );</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;yyy&quot;</span>, 2, 3 );</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;yyx&quot;</span>, 1, 2 );</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;aaa&quot;</span>, 2, 3 );</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d2/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge.htm">CContainsEdge</a>().<a class="code" href="../../d2/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge.htm#a6a9fe10ec7042c051362358dfc9c8743">execute</a>(</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            Stream.of( <span class="stringliteral">&quot;yyy&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            l_return</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        );</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        Assert.assertTrue( l_return.get( 0 ).&lt;Boolean&gt;raw() );</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        Assert.assertFalse( l_return.get( 1 ).&lt;Boolean&gt;raw() );</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    }</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    @Test</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a31200b88cfd97d2aba7dc130c1d1ce2c">  395</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a31200b88cfd97d2aba7dc130c1d1ce2c">containsvertex</a>()</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    {</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        IntStream.range( 1, 5 )</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                 .boxed()</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                 .forEach( l_graph1::addVertex );</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        IntStream.range( 5, 10 )</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                 .boxed()</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                 .forEach( l_graph2::addVertex );</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex.htm">CContainsVertex</a>().<a class="code" href="../../d4/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex.htm#aaee346e61264a7828eca54b4ae38edff">execute</a>(</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            Stream.of( 5, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            l_return</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        );</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        Assert.assertFalse( l_return.get( 0 ).&lt;Boolean&gt;raw() );</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        Assert.assertTrue( l_return.get( 1 ).&lt;Boolean&gt;raw() );</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    @Test</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfe6d84becbd168c1c96a11bdc02d47a">  425</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfe6d84becbd168c1c96a11bdc02d47a">degreemultiple</a>()</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;a&quot;</span>, 1, 1 );</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;b&quot;</span>, 1, 2 );</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;c&quot;</span>, 1, 5 );</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;d&quot;</span>, 2, 3 );</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;e&quot;</span>, 2, 5 );</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;f&quot;</span>, 3, 4 );</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;g&quot;</span>, 4, 5 );</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;h&quot;</span>, 4, 6 );</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/ddd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeMultiple.htm">CDegreeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            Stream.concat(</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                Stream.of( l_graph ),</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                IntStream.range( 1, 7 ).boxed()</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            l_return</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        );</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 3D, 3D, 2D, 3D, 3D, 1D ).toArray() );</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    }</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    @Test</div><div class="line"><a name="l00460"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9a1537a96f0db6ebdb6b46692000f7c6">  460</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9a1537a96f0db6ebdb6b46692000f7c6">degreesingle</a>()</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    {</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;x&quot;</span>, 1, 1 );</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;y&quot;</span>, 1, 2 );</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;z&quot;</span>, 1, 5 );</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;x&quot;</span>, 1, 1 );</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;y&quot;</span>, 1, 2 );</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d2/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeSingle.htm">CDegreeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            l_return</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        );</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 3D, 2D ).toArray() );</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    }</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    @Test</div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1d44318d7523ceed9539f651cb340438">  488</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1d44318d7523ceed9539f651cb340438">distancepath</a>()</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;ma&quot;</span>, 1, 2 );</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;na&quot;</span>, 2, 3 );</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;oa&quot;</span>, 3, 4 );</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;pa&quot;</span>, 2, 6 );</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDistancePath.htm">CDistancePath</a>().<a class="code" href="../../d4/d2b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyPathAlgorithm.htm#a0ce72ef967ac0d3946076f6d2114395a">execute</a>(</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            Stream.of( <span class="stringliteral">&quot;defaultweight&quot;</span>, 2, l_graph, 1, 4 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            l_return</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        );</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Number&gt;raw(), 6D );</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    }</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    @Test</div><div class="line"><a name="l00512"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9935737777ce9d267b0542ed2df1ce7f">  512</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9935737777ce9d267b0542ed2df1ce7f">shortestpath</a>()</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    {</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;mb&quot;</span>, 1, 2 );</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;nb&quot;</span>, 2, 3 );</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;ob&quot;</span>, 3, 4 );</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;pb&quot;</span>, 2, 6 );</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d2/d3b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CShortestPath.htm">CShortestPath</a>().<a class="code" href="../../d4/d2b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyPathAlgorithm.htm#a0ce72ef967ac0d3946076f6d2114395a">execute</a>(</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            Stream.of( <span class="stringliteral">&quot;defaultweight&quot;</span>, 2, l_graph, 1, 4 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            l_return</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        );</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;mb&quot;</span>, <span class="stringliteral">&quot;nb&quot;</span>, <span class="stringliteral">&quot;ob&quot;</span> ).toArray() );</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    }</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    @Test</div><div class="line"><a name="l00536"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a668a4847a1eba9626aad7b3bf37c6391">  536</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a668a4847a1eba9626aad7b3bf37c6391">spanningtree</a>()</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    {</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge12&quot;</span>, 1, 2 );</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge26&quot;</span>, 2, 6 );</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge56&quot;</span>, 5, 6 );</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge45&quot;</span>, 4, 5 );</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge34&quot;</span>, 3, 4 );</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge35&quot;</span>, 3, 5 );</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge46&quot;</span>, 4, 6 );</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge24&quot;</span>, 2, 4 );</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge23&quot;</span>, 2, 3 );</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge13&quot;</span>, 1, 3 );</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge28&quot;</span>, 2, 8 );</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge78&quot;</span>, 7, 8 );</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge67&quot;</span>, 6, 7 );</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge68&quot;</span>, 6, 8 );</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge89&quot;</span>, 8, 9 );</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge910&quot;</span>, 9, 10 );</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge710&quot;</span>, 7, 10 );</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge79&quot;</span>, 7, 9 );</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge110&quot;</span>, 1, 10 );</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge19&quot;</span>, 1, 9 );</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;spanningtreeedge29&quot;</span>, 2, 9 );</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        Assert.assertEquals( l_graph.getEdgeCount(), 21 );</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        Assert.assertEquals( l_graph.getVertexCount(), 10 );</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm">CSpanningTree</a>().<a class="code" href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm#aa6205296c8a843bb5cf4f3d96f77e266">execute</a>(</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            Stream.of( l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            l_return</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        );</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            l_return.get( 0 ).&lt;Graph&lt;Integer, String&gt;&gt;raw().getEdges().toArray(),</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            Stream.of( <span class="stringliteral">&quot;spanningtreeedge19&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge710&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge68&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge46&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge24&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge89&quot;</span>,</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                       <span class="stringliteral">&quot;spanningtreeedge45&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge23&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge67&quot;</span> ).toArray()</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        );</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="keyword">final</span> Map&lt;Object, Object&gt; l_weight = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        StreamUtils.windowed(</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            Stream.of(</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge13&quot;</span>, 18,</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge23&quot;</span>, 10,</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge34&quot;</span>, 3,</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge35&quot;</span>, 4,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge24&quot;</span>, 9,</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge46&quot;</span>, 5,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge45&quot;</span>, 1,</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge56&quot;</span>, 4,</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge26&quot;</span>, 7,</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge68&quot;</span>, 9,</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge67&quot;</span>, 9,</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge28&quot;</span>, 8,</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge78&quot;</span>, 2,</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge79&quot;</span>, 4,</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge710&quot;</span>, 6,</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge89&quot;</span>, 2,</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge910&quot;</span>, 3,</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge110&quot;</span>, 9,</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge19&quot;</span>, 9,</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge29&quot;</span>, 9,</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                <span class="stringliteral">&quot;spanningtreeedge12&quot;</span>, 8</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            ),</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            2,</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            2</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        ).forEach( i -&gt; l_weight.put( i.get( 0 ), i.get( 1 ) ) );</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm">CSpanningTree</a>().<a class="code" href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm#aa6205296c8a843bb5cf4f3d96f77e266">execute</a>(</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            Stream.of( l_weight, l_graph ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            l_return</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        );</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            l_return.get( 1 ).&lt;Graph&lt;Integer, String&gt;&gt;raw().getEdges().toArray(),</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            Stream.of( <span class="stringliteral">&quot;spanningtreeedge910&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge12&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge56&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge45&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge34&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge89&quot;</span>,</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                       <span class="stringliteral">&quot;spanningtreeedge78&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge26&quot;</span>, <span class="stringliteral">&quot;spanningtreeedge28&quot;</span> ).toArray()</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        );</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    }</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    @Test</div><div class="line"><a name="l00629"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3aa65bfffad66507c2e75c71e6f780af">  629</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3aa65bfffad66507c2e75c71e6f780af">findedgesingle</a>()</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    {</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;search&quot;</span>, 1, 2 );</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;notsearch&quot;</span>, 1, 2 );</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;xxx&quot;</span>, 1, 2 );</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeSingle.htm">CFindEdgeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            l_return</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        );</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( <span class="stringliteral">&quot;search&quot;</span>, <span class="stringliteral">&quot;xxx&quot;</span> ).toArray() );</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    }</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    @Test</div><div class="line"><a name="l00653"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adeb863a26818ee51c22dce16cb3225a4">  653</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adeb863a26818ee51c22dce16cb3225a4">findedgemultiple</a>()</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge12&quot;</span>, 1, 2 );</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge23&quot;</span>, 2, 3 );</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge34&quot;</span>, 3, 4 );</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge13&quot;</span>, 1, 3 );</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge24&quot;</span>, 2, 4 );</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeMultiple.htm">CFindEdgeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            Stream.of( l_graph, 1, 2, 2, 3, 3, 4 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            l_return</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        );</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( <span class="stringliteral">&quot;edge12&quot;</span>, <span class="stringliteral">&quot;edge23&quot;</span>, <span class="stringliteral">&quot;edge34&quot;</span> ).toArray() );</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    }</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    @Test</div><div class="line"><a name="l00678"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1656fb425e3d4be530f5d09239e316cd">  678</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1656fb425e3d4be530f5d09239e316cd">edgelistsingle</a>()</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    {</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseMultigraph&lt;&gt;();</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseMultigraph&lt;&gt;();</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;edgeA1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;edgeAA1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;edgeA2&quot;</span>, 1, 2 );</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;edgeB1&quot;</span>, 2, 3 );</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;edgeB2&quot;</span>, 3, 4 );</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d1a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListSingle.htm">CEdgeListSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;            l_return</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        );</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;edgeAA1&quot;</span>, <span class="stringliteral">&quot;edgeA1&quot;</span> ).toArray() );</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;edgeA2&quot;</span> ).toArray() );</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        l_return.clear();</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d1a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListSingle.htm">CEdgeListSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            l_return</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        );</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;edgeAA1&quot;</span>, <span class="stringliteral">&quot;edgeA1&quot;</span> ).toArray() );</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;edgeA2&quot;</span> ).toArray() );</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    }</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    @Test</div><div class="line"><a name="l00721"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a12ee9862bcd1e847bbace1dd855ab8cc">  721</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a12ee9862bcd1e847bbace1dd855ab8cc">edgelistmultiple</a>()</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    {</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseMultigraph&lt;&gt;();</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;o&quot;</span>, 1, 2 );</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;p&quot;</span>, 1, 2 );</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;q&quot;</span>, 2, 3 );</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;r&quot;</span>, 2, 3 );</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;s&quot;</span>, 2, 3 );</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../db/dff/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListMultiple.htm">CEdgeListMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            Stream.of( l_graph, 1, 2, 2, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            l_return</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        );</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;p&quot;</span>, <span class="stringliteral">&quot;o&quot;</span> ).toArray() );</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;q&quot;</span>, <span class="stringliteral">&quot;r&quot;</span>, <span class="stringliteral">&quot;s&quot;</span> ).toArray() );</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        l_return.clear();</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../db/dff/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListMultiple.htm">CEdgeListMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            Stream.of( l_graph, 1, 2, 2, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;            l_return</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        );</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;p&quot;</span>, <span class="stringliteral">&quot;o&quot;</span> ).toArray() );</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;q&quot;</span>, <span class="stringliteral">&quot;r&quot;</span>, <span class="stringliteral">&quot;s&quot;</span> ).toArray() );</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    @Test</div><div class="line"><a name="l00763"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afb03723e449003f62585c006b8ec70d1">  763</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afb03723e449003f62585c006b8ec70d1">endpointsingle</a>()</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    {</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;edgeA&quot;</span>, 1, 2 );</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;edgeA&quot;</span>, 2, 3 );</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/dbc/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointSingle.htm">CEndPointSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            Stream.of( <span class="stringliteral">&quot;edgeA&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            l_return</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        );</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        Assert.assertEquals( l_return.size(), 4 );</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1, 2, 2, 3 ).toArray() );</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    }</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    @Test</div><div class="line"><a name="l00787"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abbce15a83a3e131cea88f386ef09cc68">  787</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abbce15a83a3e131cea88f386ef09cc68">endpointmultiple</a>()</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    {</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> UndirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge2&quot;</span>, 2, 4 );</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;edge3&quot;</span>, 4, 3 );</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/d92/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointMultiple.htm">CEndPointMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;edge1&quot;</span>, <span class="stringliteral">&quot;edge3&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            l_return</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        );</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        Assert.assertEquals( l_return.size(), 4 );</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1, 2, 4, 3 ).toArray() );</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    }</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    @Test</div><div class="line"><a name="l00811"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7f86032ab518445b11902aa727e04a3c">  811</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7f86032ab518445b11902aa727e04a3c">indegreesingle</a>()</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    {</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;i&quot;</span>, 1, 2 );</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;j&quot;</span>, 3, 2 );</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;k&quot;</span>, 4, 2 );</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;l&quot;</span>, 6, 2 );</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;m&quot;</span>, 8, 2 );</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/d2c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeSingle.htm">CInDegreeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;            Stream.of( 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;            l_return</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        );</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2D, 3D ).toArray() );</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    }</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    @Test</div><div class="line"><a name="l00838"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6c5f3c1c76b54e1dd99322083041a260">  838</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6c5f3c1c76b54e1dd99322083041a260">indegreemultiple</a>()</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    {</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;n&quot;</span>, 1, 2 );</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;m&quot;</span>, 3, 2 );</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;p&quot;</span>, 1, 4 );</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/dec/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeMultiple.htm">CInDegreeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;            Stream.of( l_graph, 2, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;            l_return</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;        );</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2D, 1D ).toArray() );</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    }</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    @Test</div><div class="line"><a name="l00861"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9e44d318b1d532c0b3ef105cca959a83">  861</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9e44d318b1d532c0b3ef105cca959a83">inedgessingle</a>()</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    {</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;inedgesingle1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;inedgesingle2&quot;</span>, 2, 2 );</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;inedgesingle3&quot;</span>, 1, 2 );</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/d4b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesSingle.htm">CInEdgesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;            Stream.of( 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;            l_return</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;        );</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedgesingle1&quot;</span>, <span class="stringliteral">&quot;inedgesingle2&quot;</span> ).toArray() );</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;        l_return.clear();</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/d4b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesSingle.htm">CInEdgesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;            Stream.of( 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            l_return</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        );</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedgesingle1&quot;</span>, <span class="stringliteral">&quot;inedgesingle2&quot;</span> ).toArray() );</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    }</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    @Test</div><div class="line"><a name="l00902"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af2ab14c21916b2ed8c49e56d57d31b9e">  902</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af2ab14c21916b2ed8c49e56d57d31b9e">inedgesmultiple</a>()</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;    {</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;inedge3&quot;</span>, 1, 2 );</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;inedge4&quot;</span>, 2, 2 );</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;inedge5&quot;</span>, 1, 3 );</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesMultiple.htm">CInEdgesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;            Stream.of( l_graph, 2, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;            l_return</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        );</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedge3&quot;</span>, <span class="stringliteral">&quot;inedge4&quot;</span> ).toArray() );</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedge5&quot;</span> ).toArray() );</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        l_return.clear();</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesMultiple.htm">CInEdgesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;            Stream.of( l_graph, 2, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;            l_return</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        );</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedge3&quot;</span>, <span class="stringliteral">&quot;inedge4&quot;</span> ).toArray() );</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;inedge5&quot;</span> ).toArray() );</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    }</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    @Test</div><div class="line"><a name="l00942"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ae1d95abf283cbcf0290605c097f49314">  942</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ae1d95abf283cbcf0290605c097f49314">outdegreesingle</a>()</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    {</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;outdegree1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;outdegree2&quot;</span>, 2, 2 );</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;outdegree3&quot;</span>, 1, 2 );</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeSingle.htm">COutDegreeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;            Stream.of( 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;            l_return</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;        );</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1D, 0D ).toArray() );</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    }</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    @Test</div><div class="line"><a name="l00967"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5a4860f0d6c4a5ad2a937719a973787">  967</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5a4860f0d6c4a5ad2a937719a973787">outdegreemultiple</a>()</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    {</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outdegree4&quot;</span>, 1, 2 );</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outdegree5&quot;</span>, 2, 2 );</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outdegree6&quot;</span>, 1, 2 );</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/dd2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeMultiple.htm">COutDegreeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;            Stream.of( l_graph, 1, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;            l_return</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;        );</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1D, 1D ).toArray() );</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    }</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    @Test</div><div class="line"><a name="l00991"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9ada2f0e3638fc7832b8700605edb606">  991</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9ada2f0e3638fc7832b8700605edb606">incidentcountsingle</a>()</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    {</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;incident1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;incident1&quot;</span>, 1, 2 );</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountSingle.htm">CIncidentCountSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;            Stream.of( <span class="stringliteral">&quot;incident1&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;            l_return</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        );</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2D, 2D ).toArray() );</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    }</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    @Test</div><div class="line"><a name="l01015"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abaea9777612bb9ae862635d9f83bd4fa"> 1015</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abaea9777612bb9ae862635d9f83bd4fa">incidentcountmultiple</a>()</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    {</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incident1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incident2&quot;</span>, 1, 2 );</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/d5a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountMultiple.htm">CIncidentCountMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;incident1&quot;</span>, <span class="stringliteral">&quot;incident2&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;            l_return</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        );</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2D, 0D ).toArray() );</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    }</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    @Test</div><div class="line"><a name="l01038"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5c04877619a9a79c862757b9527cd65"> 1038</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5c04877619a9a79c862757b9527cd65">incidentverticessingle</a>()</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    {</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> SparseGraph&lt;&gt;();</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;incidentsingleA&quot;</span>, 2, 1 );</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;incidentsingleA&quot;</span>, 1, 2 );</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/dac/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesSingle.htm">CIncidentVerticesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;            Stream.of( <span class="stringliteral">&quot;incidentsingleA&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;            l_return</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;        );</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 1 ).toArray() );</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1, 2 ).toArray() );</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;        l_return.clear();</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/dac/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesSingle.htm">CIncidentVerticesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;            Stream.of( <span class="stringliteral">&quot;incidentsingleA&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;            l_return</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;        );</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 1 ).toArray() );</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1, 2 ).toArray() );</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    }</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    @Test</div><div class="line"><a name="l01078"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aa342eeec769c7cd86ab056ed0edbaf7b"> 1078</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aa342eeec769c7cd86ab056ed0edbaf7b">incidentverticesmultiple</a>()</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    {</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incidentA&quot;</span>, 2, 1 );</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incidentB&quot;</span>, 3, 2 );</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incidentC&quot;</span>, 5, 6 );</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;incidentD&quot;</span>, 7, 6 );</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesMultiple.htm">CIncidentVerticesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;incidentA&quot;</span>, <span class="stringliteral">&quot;incidentB&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;            l_return</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        );</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 1 ).toArray() );</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 3, 2 ).toArray() );</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;        l_return.clear();</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesMultiple.htm">CIncidentVerticesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;incidentA&quot;</span>, <span class="stringliteral">&quot;incidentB&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;            l_return</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;        );</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 1 ).toArray() );</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 3, 2 ).toArray() );</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    }</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    @Test</div><div class="line"><a name="l01119"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3a64c206f2881cdf36d2b85d7053e8b1"> 1119</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3a64c206f2881cdf36d2b85d7053e8b1">issuccessorsingle</a>()</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    {</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;successor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;successor2&quot;</span>, 1, 2 );</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/d9f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorSingle.htm">CIsSuccessorSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;            l_return</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;        );</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;            Stream.of( <span class="keyword">false</span>, <span class="keyword">true</span> ).toArray()</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;        );</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    }</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    @Test</div><div class="line"><a name="l01144"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad389973386a6913b6869a1e88d7b8f8a"> 1144</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad389973386a6913b6869a1e88d7b8f8a">issuccesormultiple</a>()</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    {</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorMultiple.htm">CIsSuccessorMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;            Stream.of( l_graph, 1, 2, 3, 1 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;            l_return</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;        );</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;            Stream.of( <span class="keyword">false</span>, <span class="keyword">true</span> ).toArray()</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;        );</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    }</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    @Test</div><div class="line"><a name="l01169"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afded2fdaa3682ee67216962aa3735507"> 1169</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afded2fdaa3682ee67216962aa3735507">ispredecessorsingle</a>()</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    {</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;predecessor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;predecessor2&quot;</span>, 1, 2 );</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorSingle.htm">CIsPredecessorSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;            l_return</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        );</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">false</span> ).toArray()</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        );</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;    }</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    @Test</div><div class="line"><a name="l01194"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7c455a3693cb4ca7fee9b748924e7f41"> 1194</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7c455a3693cb4ca7fee9b748924e7f41">ispredecessormultiple</a>()</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    {</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/dd1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorMultiple.htm">CIsPredecessorMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;            Stream.of( l_graph, 1, 2, 3, 1 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;            l_return</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;        );</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">false</span> ).toArray()</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;        );</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    }</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;    @Test</div><div class="line"><a name="l01219"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab25ad4eab513d431e486371d316a7cd1"> 1219</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab25ad4eab513d431e486371d316a7cd1">neighborscountsingle</a>()</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    {</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;neighborcount1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;neighborcount2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;neighborcount1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;neighborcount2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;neighborcount3&quot;</span>, 4, 1 );</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d3/dc1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountSingle.htm">CNeighborsCountSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;            l_return</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;        );</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Number&gt;raw ).map( Number::longValue ).toArray(),</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;            Stream.of( 2L, 3L ).toArray()</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;        );</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    }</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    @Test</div><div class="line"><a name="l01248"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf3e0e514d82fe9336ded989b4e08d84"> 1248</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf3e0e514d82fe9336ded989b4e08d84">neighborscountmultiple</a>()</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    {</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighborcount1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighborcount2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighborcount3&quot;</span>, 5, 3 );</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighborcount4&quot;</span>, 4, 1 );</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/dbd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountMultiple.htm">CNeighborsCountMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;            Stream.of( l_graph, 1, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;            l_return</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;        );</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Number&gt;raw ).map( Number::longValue ).toArray(),</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;            Stream.of( 3L, 2L ).toArray()</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        );</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    }</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    @Test</div><div class="line"><a name="l01275"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a0236a2b93c8468ce8d2c9b0941b500b5"> 1275</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a0236a2b93c8468ce8d2c9b0941b500b5">isneighborsingle</a>()</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    {</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isneighbor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isneighbor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor3&quot;</span>, 4, 1 );</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d6/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborSingle.htm">CIsNeighborSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;            Stream.of( 1, 2, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;            l_return</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;        );</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">true</span> ).toArray()</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;        );</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;    }</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;    @Test</div><div class="line"><a name="l01304"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1591812d9a5a4efecaf18e9303fefc50"> 1304</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1591812d9a5a4efecaf18e9303fefc50">isneighbormultiple</a>()</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;    {</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isneighbor10&quot;</span>, 2, 1 );</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isneighbor20&quot;</span>, 3, 1 );</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isneighbor10&quot;</span>, 2, 1 );</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isneighbor20&quot;</span>, 3, 1 );</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isneighbor30&quot;</span>, 4, 1 );</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/d70/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborMultiple.htm">CIsNeighborMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;            Stream.of( l_graph, 1, 2, 3, 4, 3, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;            l_return</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;        );</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;Boolean&gt;raw ).toArray(),</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span> ).toArray()</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;        );</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    }</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    @Test</div><div class="line"><a name="l01332"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a5169a958839be19537048c7eccb69090"> 1332</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a5169a958839be19537048c7eccb69090">neigborssingle</a>()</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    {</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isneighbor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isneighbor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isneighbor3&quot;</span>, 4, 1 );</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/d20/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsSingle.htm">CNeighborsSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;            l_return</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;        );</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3 ).toArray() );</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3, 4 ).toArray() );</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;        l_return.clear();</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/d20/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsSingle.htm">CNeighborsSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;            l_return</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;        );</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3 ).toArray() );</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3, 4 ).toArray() );</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    }</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    @Test</div><div class="line"><a name="l01375"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfec5caea0f7d680763c5d5ad6240666"> 1375</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfec5caea0f7d680763c5d5ad6240666">neigborsmultiple</a>()</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    {</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighbors1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighbors2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighbors1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighbors2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;neighbors3&quot;</span>, 4, 1 );</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d25/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsMultiple.htm">CNeighborsMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;            Stream.of( l_graph, 1, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;            l_return</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;        );</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3, 4 ).toArray() );</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1 ).toArray() );</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;        l_return.clear();</div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d25/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsMultiple.htm">CNeighborsMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;            Stream.of( l_graph, 1, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;            l_return</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;        );</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 2, 3, 4 ).toArray() );</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( 1 ).toArray() );</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;    }</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;    @Test</div><div class="line"><a name="l01417"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a466ee90c1a6f474fd7f8eee4083a6171"> 1417</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a466ee90c1a6f474fd7f8eee4083a6171">isincidentsingle</a>()</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;    {</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isincident1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;isincident2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isincident1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isincident2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;isincident3&quot;</span>, 4, 1 );</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/db9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentSingle.htm">CIsIncidentSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;            Stream.of( 1, <span class="stringliteral">&quot;isincident2&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;            l_return</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;        );</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(),</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">true</span> ).toArray()</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;        );</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;    }</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    @Test</div><div class="line"><a name="l01446"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a591f65dbd01ce813da9007e009641232"> 1446</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a591f65dbd01ce813da9007e009641232">isincidentmultiple</a>()</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;    {</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isincident10&quot;</span>, 2, 1 );</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isincident20&quot;</span>, 3, 1 );</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isincident10&quot;</span>, 2, 1 );</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isincident20&quot;</span>, 3, 1 );</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;isincident30&quot;</span>, 4, 1 );</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/dcf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentMultiple.htm">CIsIncidentMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;            Stream.of( l_graph, 1, <span class="stringliteral">&quot;isincident10&quot;</span>, 2, <span class="stringliteral">&quot;isincident20&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;            l_return</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;        );</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;            l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(),</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;            Stream.of( <span class="keyword">true</span>, <span class="keyword">false</span> ).toArray()</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;        );</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;    }</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;    @Test</div><div class="line"><a name="l01473"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ac55a4fa5b7c086fded16ced0231c5607"> 1473</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ac55a4fa5b7c086fded16ced0231c5607">oppositesingle</a>()</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;    {</div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;opposite&quot;</span>, 2, 1 );</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;opposite&quot;</span>, 3, 1 );</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/d6d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeSingle.htm">COppositeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;            Stream.of( 1, <span class="stringliteral">&quot;opposite&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;            l_return</div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;        );</div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2, 3 ).toArray() );</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;    }</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;    @Test</div><div class="line"><a name="l01497"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a116899d7fe161f5cd828486450c73bc6"> 1497</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a116899d7fe161f5cd828486450c73bc6">oppositemultiple</a>()</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;    {</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;opposite1&quot;</span>, 2, 1 );</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;opposite2&quot;</span>, 3, 4 );</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeMultiple.htm">COppositeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;            Stream.of( l_graph, 1, <span class="stringliteral">&quot;opposite1&quot;</span>, 3, <span class="stringliteral">&quot;opposite2&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;            l_return</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;        );</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 2, 4 ).toArray() );</div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;    }</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;    @Test</div><div class="line"><a name="l01520"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a02d4b9a174759e173c7049bb99a6a2a0"> 1520</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a02d4b9a174759e173c7049bb99a6a2a0">outedgessingle</a>()</div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;    {</div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;outedgesingle1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;outedgesingle2&quot;</span>, 1, 3 );</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;outedgesingle3&quot;</span>, 1, 4 );</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;outedgesingle4&quot;</span>, 1, 5 );</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/d84/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesSingle.htm">COutEdgesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;            l_return</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;        );</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgesingle2&quot;</span>, <span class="stringliteral">&quot;outedgesingle1&quot;</span> ).toArray() );</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgesingle4&quot;</span>, <span class="stringliteral">&quot;outedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;        l_return.clear();</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/d84/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesSingle.htm">COutEdgesSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;            l_return</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;        );</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgesingle2&quot;</span>, <span class="stringliteral">&quot;outedgesingle1&quot;</span> ).toArray() );</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgesingle4&quot;</span>, <span class="stringliteral">&quot;outedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    }</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;    @Test</div><div class="line"><a name="l01562"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a928c93d96aa77f1e2dbe411b9041b802"> 1562</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a928c93d96aa77f1e2dbe411b9041b802">outedgemultiple</a>()</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    {</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;</div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outedgemultiple1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outedgemultiple2&quot;</span>, 1, 3 );</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outedgemultiple3&quot;</span>, 2, 4 );</div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;outedgemultiple4&quot;</span>, 2, 5 );</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/db7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesMultiple.htm">COutEdgesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;            Stream.of( l_graph, 1, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;            l_return</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;        );</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgemultiple2&quot;</span>, <span class="stringliteral">&quot;outedgemultiple1&quot;</span> ).toArray() );</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgemultiple4&quot;</span>, <span class="stringliteral">&quot;outedgemultiple3&quot;</span> ).toArray() );</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;        l_return.clear();</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d9/db7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesMultiple.htm">COutEdgesMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;            <span class="keyword">true</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;            Stream.of( l_graph, 1, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;            l_return</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        );</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;        Assert.assertArrayEquals( l_return.get( 0 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgemultiple2&quot;</span>, <span class="stringliteral">&quot;outedgemultiple1&quot;</span> ).toArray() );</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;        Assert.assertArrayEquals( l_return.get( 1 ).&lt;List&lt;?&gt;&gt;raw().toArray(), Stream.of( <span class="stringliteral">&quot;outedgemultiple4&quot;</span>, <span class="stringliteral">&quot;outedgemultiple3&quot;</span> ).toArray() );</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;        Assert.assertEquals( l_return.get( 1 ).raw().getClass(), Collections.synchronizedList( Collections.emptyList() ).getClass() );</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;    }</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;    @Test</div><div class="line"><a name="l01603"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aad7b304e14aee22d820a10dbe5050546"> 1603</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aad7b304e14aee22d820a10dbe5050546">predecessorcountsingle</a>()</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;    {</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;predecessorcountsingle1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;predecessorcountsingle2&quot;</span>, 3, 1 );</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;predecessorcountsingle3&quot;</span>, 2, 1 );</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;predecessorcountsingle4&quot;</span>, 5, 1 );</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/d19/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountSingle.htm">CPredecessorCountSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;            l_return</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;        );</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;</div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1D, 2D ).toArray() );</div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;    }</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;    @Test</div><div class="line"><a name="l01629"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a79755be24b9df4facb66789c8b57823a"> 1629</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a79755be24b9df4facb66789c8b57823a">predecessorcountmultiple</a>()</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;    {</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseMultigraph&lt;&gt;();</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessorcountmultiple1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessorcountmultiple2&quot;</span>, 1, 3 );</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessorcountmultiple3&quot;</span>, 4, 2 );</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;predecessorcountmultiple4&quot;</span>, 5, 1 );</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/df2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountMultiple.htm">CPredecessorCountMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;            Stream.of( l_graph, 1, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;            l_return</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;        );</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 1D, 2D ).toArray() );</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;    }</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;    @Test</div><div class="line"><a name="l01654"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a01b3e4a208f44e4f8909bf09a049030d"> 1654</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a01b3e4a208f44e4f8909bf09a049030d">vertexremovemultiple</a>()</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;    {</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;        l_graph.addVertex( 5 );</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;        l_graph.addVertex( 3 );</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;vertexremovemultiple&quot;</span>, 1, 2 );</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d71/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexMultiple.htm">CRemoveVertexMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;            Stream.of( l_graph, 1, 3, 5 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;        );</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;        Assert.assertEquals( l_graph.getEdgeCount(), 0 );</div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;        Assert.assertArrayEquals( l_graph.getVertices().toArray(), Stream.of( 2 ).toArray() );</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;    }</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;</div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;    @Test</div><div class="line"><a name="l01678"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a307dff3bae1875bcb2f062e2d2b8e013"> 1678</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a307dff3bae1875bcb2f062e2d2b8e013">vertextremovesingle</a>()</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;    {</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;</div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;        l_graph1.addVertex( 5 );</div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;        l_graph1.addVertex( 3 );</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;vertexremovesingle&quot;</span>, 5, 7 );</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;        l_graph2.addVertex( 5 );</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;        l_graph2.addVertex( 7 );</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;vertexremovesingle&quot;</span>, 7, 1 );</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dd/d8a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexSingle.htm">CRemoveVertexSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;            Stream.of( 5, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;        );</div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;        Assert.assertEquals( l_graph1.getEdgeCount(), 0 );</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;        Assert.assertEquals( l_graph2.getEdgeCount(), 1 );</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;        Assert.assertArrayEquals( l_graph1.getVertices().toArray(), Stream.of( 3, 7 ).toArray() );</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;        Assert.assertArrayEquals( l_graph2.getVertices().toArray(), Stream.of( 1, 7 ).toArray() );</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;    }</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;    @Test</div><div class="line"><a name="l01708"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad8a283d4f02d3ef7195c9d8bc870cbeb"> 1708</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad8a283d4f02d3ef7195c9d8bc870cbeb">successorcountsingle</a>()</div><div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;    {</div><div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;successorcountsingle1&quot;</span>, 1, 5 );</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;successorcountsingle2&quot;</span>, 1, 7 );</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;successorcountsingle3&quot;</span>, 1, 3 );</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;</div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;successorcountsingle4&quot;</span>, 1, 2 );</div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;successorcountsingle5&quot;</span>, 1, 9 );</div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;</div><div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d9d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountSingle.htm">CSuccessorCountSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;            Stream.of( 1, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;            l_return</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;        );</div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 3D, 2D ).toArray() );</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;    }</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;    @Test</div><div class="line"><a name="l01736"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a252c9f4f1dbd0228c3443e09f10e1700"> 1736</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a252c9f4f1dbd0228c3443e09f10e1700">successorcountmultiple</a>()</div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;    {</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successorcountmultiple1&quot;</span>, 1, 5 );</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successorcountmultiple2&quot;</span>, 1, 7 );</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successorcountmultiple3&quot;</span>, 1, 3 );</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;successorcountmultiple4&quot;</span>, 3, 5 );</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/d77/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountMultiple.htm">CSuccessorCountMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;            Stream.of( l_graph, 1, 3 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;            l_return</div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;        );</div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(), Stream.of( 3D, 1D ).toArray() );</div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;    }</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;    @Test</div><div class="line"><a name="l01760"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf12f7d75d73bb0e026590b13356e8bd"> 1760</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf12f7d75d73bb0e026590b13356e8bd">removeedgesingle</a>()</div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;    {</div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph1 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph2 = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;</div><div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;removeedgesingle1&quot;</span>, 1, 5 );</div><div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;removeedgesingle2&quot;</span>, 1, 7 );</div><div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;        l_graph1.addEdge( <span class="stringliteral">&quot;removeedgesingle3&quot;</span>, 1, 3 );</div><div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;</div><div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;removeedgesingle1&quot;</span>, 1, 2 );</div><div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;        l_graph2.addEdge( <span class="stringliteral">&quot;removeedgesingle5&quot;</span>, 1, 9 );</div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;</div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d0/db0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeSingle.htm">CRemoveEdgeSingle</a>().<a class="code" href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">execute</a>(</div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;            Stream.of( <span class="stringliteral">&quot;removeedgesingle1&quot;</span>, l_graph1, l_graph2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;        );</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;</div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;        Assert.assertArrayEquals( l_graph1.getEdges().toArray(), Stream.of( <span class="stringliteral">&quot;removeedgesingle2&quot;</span>, <span class="stringliteral">&quot;removeedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;        Assert.assertArrayEquals( l_graph2.getEdges().toArray(), Stream.of( <span class="stringliteral">&quot;removeedgesingle5&quot;</span> ).toArray() );</div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;    }</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;</div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;    @Test</div><div class="line"><a name="l01787"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a17f97d17bf81fdd318d3664dac3dea2a"> 1787</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a17f97d17bf81fdd318d3664dac3dea2a">removeedgemultiple</a>()</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;    {</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;        <span class="keyword">final</span> Graph&lt;Integer, String&gt; l_graph = <span class="keyword">new</span> DirectedSparseGraph&lt;&gt;();</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;removeedgesingle1&quot;</span>, 1, 5 );</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;removeedgesingle2&quot;</span>, 1, 7 );</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;removeedgesingle3&quot;</span>, 1, 3 );</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;removeedgesingle4&quot;</span>, 5, 3 );</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;        l_graph.addEdge( <span class="stringliteral">&quot;removeedgesingle5&quot;</span>, 5, 7 );</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d0/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeMultiple.htm">CRemoveEdgeMultiple</a>().<a class="code" href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">execute</a>(</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;            Stream.of( l_graph, <span class="stringliteral">&quot;removeedgesingle2&quot;</span>, <span class="stringliteral">&quot;removeedgesingle5&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;        );</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;        Assert.assertArrayEquals( l_graph.getEdges().toArray(), Stream.of( <span class="stringliteral">&quot;removeedgesingle1&quot;</span>, <span class="stringliteral">&quot;removeedgesingle4&quot;</span>, <span class="stringliteral">&quot;removeedgesingle3&quot;</span> ).toArray() );</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;    }</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;</div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;</div><div class="line"><a name="l01813"></a><span class="lineno"><a class="line" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6b6162cfbb10bfdebda15faab924b089"> 1813</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6b6162cfbb10bfdebda15faab924b089">main</a>( <span class="keyword">final</span> String[] p_args )</div><div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;    {</div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm">TestCActionGraph</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">invoketest</a>();</div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;    }</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a1d44318d7523ceed9539f651cb340438"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1d44318d7523ceed9539f651cb340438">org.lightjason.agentspeak.action.builtin.TestCActionGraph.distancepath</a></div><div class="ttdeci">final void distancepath()</div><div class="ttdoc">test distance-path </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00488">TestCActionGraph.java:488</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a6b6162cfbb10bfdebda15faab924b089"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6b6162cfbb10bfdebda15faab924b089">org.lightjason.agentspeak.action.builtin.TestCActionGraph.main</a></div><div class="ttdeci">static void main(final String[] p_args)</div><div class="ttdoc">test call </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01813">TestCActionGraph.java:1813</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointSingle_htm"><div class="ttname"><a href="../../dc/dbc/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CEndPointSingle</a></div><div class="ttdoc">returns of an edge the vertices from each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/da8/CEndPointSingle_8java_source.htm#l00043">CEndPointSingle.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointMultiple_htm"><div class="ttname"><a href="../../dc/d92/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEndPointMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CEndPointMultiple</a></div><div class="ttdoc">returns of any edge the vertices from a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d28/CEndPointMultiple_8java_source.htm#l00042">CEndPointMultiple.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices_htm_a52210d6acae508a13e5188003b003063"><div class="ttname"><a href="../../dd/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices.htm#a52210d6acae508a13e5188003b003063">org.lightjason.agentspeak.action.builtin.graph.CVertices.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d76/CVertices_8java_source.htm#l00065">CVertices.java:65</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a7f86032ab518445b11902aa727e04a3c"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7f86032ab518445b11902aa727e04a3c">org.lightjason.agentspeak.action.builtin.TestCActionGraph.indegreesingle</a></div><div class="ttdeci">final void indegreesingle()</div><div class="ttdoc">test in-degree single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00811">TestCActionGraph.java:811</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a12ee9862bcd1e847bbace1dd855ab8cc"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a12ee9862bcd1e847bbace1dd855ab8cc">org.lightjason.agentspeak.action.builtin.TestCActionGraph.edgelistmultiple</a></div><div class="ttdeci">final void edgelistmultiple()</div><div class="ttdoc">test edgelist multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00721">TestCActionGraph.java:721</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges_htm_a9531a3cedd01169e141e798a858b3ece"><div class="ttname"><a href="../../d4/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges.htm#a9531a3cedd01169e141e798a858b3ece">org.lightjason.agentspeak.action.builtin.graph.CEdges.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/da7/CEdges_8java_source.htm#l00066">CEdges.java:66</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge_htm"><div class="ttname"><a href="../../d2/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge.htm">org.lightjason.agentspeak.action.builtin.graph.CContainsEdge</a></div><div class="ttdoc">check if a graph contains an edge. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d15/CContainsEdge_8java_source.htm#l00050">CContainsEdge.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountMultiple_htm"><div class="ttname"><a href="../../d1/df2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CPredecessorCountMultiple</a></div><div class="ttdoc">returns the number of predecessors of any vertex in a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d59/CPredecessorCountMultiple_8java_source.htm#l00041">CPredecessorCountMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a7e803946af2887eede77d3b0a6b87fc9"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7e803946af2887eede77d3b0a6b87fc9">org.lightjason.agentspeak.action.builtin.TestCActionGraph.addedgesingle</a></div><div class="ttdeci">final void addedgesingle()</div><div class="ttdoc">test add-edge single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00181">TestCActionGraph.java:181</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount_htm"><div class="ttname"><a href="../../df/d41/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount.htm">org.lightjason.agentspeak.action.builtin.graph.CVertexCount</a></div><div class="ttdoc">returns the number of vertices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d8e/CVertexCount_8java_source.htm#l00048">CVertexCount.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_adb57a8e269e93043d76f9ed3ec9e45dd"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adb57a8e269e93043d76f9ed3ec9e45dd">org.lightjason.agentspeak.action.builtin.TestCActionGraph.addedgemultiple</a></div><div class="ttdeci">final void addedgemultiple()</div><div class="ttdoc">test add-edge multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00209">TestCActionGraph.java:209</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountSingle_htm"><div class="ttname"><a href="../../d5/d9d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CSuccessorCountSingle</a></div><div class="ttdoc">returns the number of successors of a vertex within each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d02/CSuccessorCountSingle_8java_source.htm#l00041">CSuccessorCountSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_afb03723e449003f62585c006b8ec70d1"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afb03723e449003f62585c006b8ec70d1">org.lightjason.agentspeak.action.builtin.TestCActionGraph.endpointsingle</a></div><div class="ttdeci">final void endpointsingle()</div><div class="ttdoc">test endpoint single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00763">TestCActionGraph.java:763</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00045">IBaseTest.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount_htm_a8983bff93a147258578908cf0632235d"><div class="ttname"><a href="../../d9/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount.htm#a8983bff93a147258578908cf0632235d">org.lightjason.agentspeak.action.builtin.graph.CEdgeCount.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d8c/CEdgeCount_8java_source.htm#l00064">CEdgeCount.java:64</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountMultiple_htm"><div class="ttname"><a href="../../dc/dbd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CNeighborsCountMultiple</a></div><div class="ttdoc">returns the number neighbors of each vertices of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d93/CNeighborsCountMultiple_8java_source.htm#l00042">CNeighborsCountMultiple.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a17f97d17bf81fdd318d3664dac3dea2a"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a17f97d17bf81fdd318d3664dac3dea2a">org.lightjason.agentspeak.action.builtin.TestCActionGraph.removeedgemultiple</a></div><div class="ttdeci">final void removeedgemultiple()</div><div class="ttdoc">test remove edge multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01787">TestCActionGraph.java:1787</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorSingle_htm"><div class="ttname"><a href="../../d6/d9f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIsSuccessorSingle</a></div><div class="ttdoc">checks if a vertex is successor of another vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/deb/CIsSuccessorSingle_8java_source.htm#l00041">CIsSuccessorSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborMultiple_htm"><div class="ttname"><a href="../../df/d70/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIsNeighborMultiple</a></div><div class="ttdoc">checks all vertex tuple, if the first part is a neighbor of the second one of a single graph instance...</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/df0/CIsNeighborMultiple_8java_source.htm#l00041">CIsNeighborMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a3a64c206f2881cdf36d2b85d7053e8b1"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3a64c206f2881cdf36d2b85d7053e8b1">org.lightjason.agentspeak.action.builtin.TestCActionGraph.issuccessorsingle</a></div><div class="ttdeci">final void issuccessorsingle()</div><div class="ttdoc">test is-successor single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01119">TestCActionGraph.java:1119</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_acf3e0e514d82fe9336ded989b4e08d84"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf3e0e514d82fe9336ded989b4e08d84">org.lightjason.agentspeak.action.builtin.TestCActionGraph.neighborscountmultiple</a></div><div class="ttdeci">final void neighborscountmultiple()</div><div class="ttdoc">test neighborscount single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01248">TestCActionGraph.java:1248</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_adeb863a26818ee51c22dce16cb3225a4"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adeb863a26818ee51c22dce16cb3225a4">org.lightjason.agentspeak.action.builtin.TestCActionGraph.findedgemultiple</a></div><div class="ttdeci">final void findedgemultiple()</div><div class="ttdoc">test find-edge multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00653">TestCActionGraph.java:653</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm_a2fbdd035b68cfb71c6ee6bd92c799cdf"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">org.lightjason.agentspeak.language.execution.IContext.EMPTYPLAN</a></div><div class="ttdeci">IContext EMPTYPLAN</div><div class="ttdoc">empty context with plan </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00047">IContext.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a7c455a3693cb4ca7fee9b748924e7f41"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a7c455a3693cb4ca7fee9b748924e7f41">org.lightjason.agentspeak.action.builtin.TestCActionGraph.ispredecessormultiple</a></div><div class="ttdeci">final void ispredecessormultiple()</div><div class="ttdoc">test is-predecessor multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01194">TestCActionGraph.java:1194</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_a153155d721393465604d8e795ad2fc31"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">org.lightjason.agentspeak.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00056">IBaseTest.java:56</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a591f65dbd01ce813da9007e009641232"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a591f65dbd01ce813da9007e009641232">org.lightjason.agentspeak.action.builtin.TestCActionGraph.isincidentmultiple</a></div><div class="ttdeci">final void isincidentmultiple()</div><div class="ttdoc">test is-incident multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01446">TestCActionGraph.java:1446</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_afded2fdaa3682ee67216962aa3735507"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#afded2fdaa3682ee67216962aa3735507">org.lightjason.agentspeak.action.builtin.TestCActionGraph.ispredecessorsingle</a></div><div class="ttdeci">final void ispredecessorsingle()</div><div class="ttdoc">test is-predecessor single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01169">TestCActionGraph.java:1169</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_adfe6d84becbd168c1c96a11bdc02d47a"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfe6d84becbd168c1c96a11bdc02d47a">org.lightjason.agentspeak.action.builtin.TestCActionGraph.degreemultiple</a></div><div class="ttdeci">final void degreemultiple()</div><div class="ttdoc">test degree multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00425">TestCActionGraph.java:425</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a9935737777ce9d267b0542ed2df1ce7f"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9935737777ce9d267b0542ed2df1ce7f">org.lightjason.agentspeak.action.builtin.TestCActionGraph.shortestpath</a></div><div class="ttdeci">final void shortestpath()</div><div class="ttdoc">test shortest-path </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00512">TestCActionGraph.java:512</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesMultiple_htm"><div class="ttname"><a href="../../de/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIncidentVerticesMultiple</a></div><div class="ttdoc">returns a list of incident vertices of each edge of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dbb/CIncidentVerticesMultiple_8java_source.htm#l00043">CIncidentVerticesMultiple.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ab25ad4eab513d431e486371d316a7cd1"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab25ad4eab513d431e486371d316a7cd1">org.lightjason.agentspeak.action.builtin.TestCActionGraph.neighborscountsingle</a></div><div class="ttdeci">final void neighborscountsingle()</div><div class="ttdoc">test neighborscount single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01219">TestCActionGraph.java:1219</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a307dff3bae1875bcb2f062e2d2b8e013"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a307dff3bae1875bcb2f062e2d2b8e013">org.lightjason.agentspeak.action.builtin.TestCActionGraph.vertextremovesingle</a></div><div class="ttdeci">final void vertextremovesingle()</div><div class="ttdoc">test remove vertex single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01678">TestCActionGraph.java:1678</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CShortestPath_htm"><div class="ttname"><a href="../../d2/d3b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CShortestPath.htm">org.lightjason.agentspeak.action.builtin.graph.CShortestPath</a></div><div class="ttdoc">calculates the edge list of the shortest path of two vertices within each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d88/CShortestPath_8java_source.htm#l00050">CShortestPath.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle_htm_ac12b171380d7683d12a30ecc9d04b5fd"><div class="ttname"><a href="../../d6/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplySingle.htm#ac12b171380d7683d12a30ecc9d04b5fd">org.lightjason.agentspeak.action.builtin.graph.IApplySingle.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6b/IApplySingle_8java_source.htm#l00058">IApplySingle.java:58</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeSingle_htm"><div class="ttname"><a href="../../dd/d2c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CInDegreeSingle</a></div><div class="ttdoc">returns the in-degree of a vertex of multiple graph instances. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/dac/CInDegreeSingle_8java_source.htm#l00041">CInDegreeSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm_ae8877b7dcb9693c3e108a4dff67549f5"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">org.lightjason.agentspeak.action.builtin.collection.list.CCreate.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00068">collection/list/CCreate.java:68</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountSingle_htm"><div class="ttname"><a href="../../df/d19/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CPredecessorCountSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CPredecessorCountSingle</a></div><div class="ttdoc">returns the number of predecessors of a vertex in multiple graph instances. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dd7/CPredecessorCountSingle_8java_source.htm#l00041">CPredecessorCountSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a252c9f4f1dbd0228c3443e09f10e1700"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a252c9f4f1dbd0228c3443e09f10e1700">org.lightjason.agentspeak.action.builtin.TestCActionGraph.successorcountmultiple</a></div><div class="ttdeci">final void successorcountmultiple()</div><div class="ttdoc">test successor count multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01736">TestCActionGraph.java:1736</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple_htm_aef9723a58dd65296d76f434e623c698a"><div class="ttname"><a href="../../de/d9a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyMultiple.htm#aef9723a58dd65296d76f434e623c698a">org.lightjason.agentspeak.action.builtin.graph.IApplyMultiple.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d87/IApplyMultiple_8java_source.htm#l00059">IApplyMultiple.java:59</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a466ee90c1a6f474fd7f8eee4083a6171"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a466ee90c1a6f474fd7f8eee4083a6171">org.lightjason.agentspeak.action.builtin.TestCActionGraph.isincidentsingle</a></div><div class="ttdeci">final void isincidentsingle()</div><div class="ttdoc">test is-incident single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01417">TestCActionGraph.java:1417</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_htm"><div class="ttname"><a href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">org.lightjason.agentspeak.action.builtin</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_af5a4860f0d6c4a5ad2a937719a973787"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5a4860f0d6c4a5ad2a937719a973787">org.lightjason.agentspeak.action.builtin.TestCActionGraph.outdegreemultiple</a></div><div class="ttdeci">final void outdegreemultiple()</div><div class="ttdoc">test out-degree single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00967">TestCActionGraph.java:967</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsSingle_htm"><div class="ttname"><a href="../../dd/d20/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CNeighborsSingle</a></div><div class="ttdoc">returns the neighbors of a vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d7f/CNeighborsSingle_8java_source.htm#l00044">CNeighborsSingle.java:44</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices_htm"><div class="ttname"><a href="../../dd/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertices.htm">org.lightjason.agentspeak.action.builtin.graph.CVertices</a></div><div class="ttdoc">returns all vertices of a graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d76/CVertices_8java_source.htm#l00049">CVertices.java:49</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ad0b9d77887baec5a804b5bf2f2c7763f"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad0b9d77887baec5a804b5bf2f2c7763f">org.lightjason.agentspeak.action.builtin.TestCActionGraph.edgecount</a></div><div class="ttdeci">final void edgecount()</div><div class="ttdoc">test edge-count </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00252">TestCActionGraph.java:252</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_htm"><div class="ttname"><a href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">org.lightjason.agentspeak.language.execution</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexSingle_htm"><div class="ttname"><a href="../../d1/dd6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CAddVertexSingle</a></div><div class="ttdoc">adds a vertex to the graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de9/CAddVertexSingle_8java_source.htm#l00041">CAddVertexSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentSingle_htm"><div class="ttname"><a href="../../d8/db9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIsIncidentSingle</a></div><div class="ttdoc">checks if a vertex and an edge incident for each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd2/CIsIncidentSingle_8java_source.htm#l00042">CIsIncidentSingle.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeSingle_htm"><div class="ttname"><a href="../../dc/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CFindEdgeSingle</a></div><div class="ttdoc">returns an edge between vertices for each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d6c/CFindEdgeSingle_8java_source.htm#l00043">CFindEdgeSingle.java:43</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeSingle_htm"><div class="ttname"><a href="../../dc/d6d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.COppositeSingle</a></div><div class="ttdoc">returns the opposit of a vertex and edge of any graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/de4/COppositeSingle_8java_source.htm#l00041">COppositeSingle.java:41</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount_htm"><div class="ttname"><a href="../../d9/dae/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeCount.htm">org.lightjason.agentspeak.action.builtin.graph.CEdgeCount</a></div><div class="ttdoc">returns the number of edges. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d8c/CEdgeCount_8java_source.htm#l00048">CEdgeCount.java:48</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">org.lightjason.agentspeak.language.execution.IContext</a></div><div class="ttdoc">execution context with local data </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00042">IContext.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountSingle_htm"><div class="ttname"><a href="../../df/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIncidentCountSingle</a></div><div class="ttdoc">returns the number of vertices that are incident to edge of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/df4/CIncidentCountSingle_8java_source.htm#l00041">CIncidentCountSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountMultiple_htm"><div class="ttname"><a href="../../dc/d77/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSuccessorCountMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CSuccessorCountMultiple</a></div><div class="ttdoc">returns the number of successors of each vertex of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dbe/CSuccessorCountMultiple_8java_source.htm#l00037">CSuccessorCountMultiple.java:37</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree_htm"><div class="ttname"><a href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm">org.lightjason.agentspeak.action.builtin.graph.CSpanningTree</a></div><div class="ttdoc">creates a minimal spanning tree of any graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d8c/CSpanningTree_8java_source.htm#l00058">CSpanningTree.java:58</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a1591812d9a5a4efecaf18e9303fefc50"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1591812d9a5a4efecaf18e9303fefc50">org.lightjason.agentspeak.action.builtin.TestCActionGraph.isneighbormultiple</a></div><div class="ttdeci">final void isneighbormultiple()</div><div class="ttdoc">test is-neighbor multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01304">TestCActionGraph.java:1304</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ae1d95abf283cbcf0290605c097f49314"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ae1d95abf283cbcf0290605c097f49314">org.lightjason.agentspeak.action.builtin.TestCActionGraph.outdegreesingle</a></div><div class="ttdeci">final void outdegreesingle()</div><div class="ttdoc">test out-degree single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00942">TestCActionGraph.java:942</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeSingle_htm"><div class="ttname"><a href="../../d6/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CAddEdgeSingle</a></div><div class="ttdoc">adds a single edge to the multiple graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d90/CAddEdgeSingle_8java_source.htm#l00042">CAddEdgeSingle.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a668a4847a1eba9626aad7b3bf37c6391"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a668a4847a1eba9626aad7b3bf37c6391">org.lightjason.agentspeak.action.builtin.TestCActionGraph.spanningtree</a></div><div class="ttdeci">final void spanningtree()</div><div class="ttdoc">test spanning-tree action </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00536">TestCActionGraph.java:536</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a6598dd04110fa6624c1979fad158f046"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6598dd04110fa6624c1979fad158f046">org.lightjason.agentspeak.action.builtin.TestCActionGraph.create</a></div><div class="ttdeci">final void create()</div><div class="ttdoc">test graph creating </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00118">TestCActionGraph.java:118</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex_htm"><div class="ttname"><a href="../../d4/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex.htm">org.lightjason.agentspeak.action.builtin.graph.CContainsVertex</a></div><div class="ttdoc">check if a graph contains a vertex. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d56/CContainsVertex_8java_source.htm#l00050">CContainsVertex.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesSingle_htm"><div class="ttname"><a href="../../d4/d4b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CInEdgesSingle</a></div><div class="ttdoc">returns incomming edges of a vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/de7/CInEdgesSingle_8java_source.htm#l00045">CInEdgesSingle.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeSingle_htm"><div class="ttname"><a href="../../d1/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.COutDegreeSingle</a></div><div class="ttdoc">returns the out-degree of a vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d40/COutDegreeSingle_8java_source.htm#l00041">COutDegreeSingle.java:41</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a4f0e6ed0f68b84f807104b86be4a2f06"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a4f0e6ed0f68b84f807104b86be4a2f06">org.lightjason.agentspeak.action.builtin.TestCActionGraph.edges</a></div><div class="ttdeci">final void edges()</div><div class="ttdoc">test edges </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00302">TestCActionGraph.java:302</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.collection.list.CCreate</a></div><div class="ttdoc">creates a list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00050">collection/list/CCreate.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDistancePath_htm"><div class="ttname"><a href="../../d5/d47/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDistancePath.htm">org.lightjason.agentspeak.action.builtin.graph.CDistancePath</a></div><div class="ttdoc">calculates the distance of two vertices within each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dd0/CDistancePath_8java_source.htm#l00050">CDistancePath.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a31200b88cfd97d2aba7dc130c1d1ce2c"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a31200b88cfd97d2aba7dc130c1d1ce2c">org.lightjason.agentspeak.action.builtin.TestCActionGraph.containsvertex</a></div><div class="ttdeci">final void containsvertex()</div><div class="ttdoc">test contains-vertex </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00395">TestCActionGraph.java:395</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_aa342eeec769c7cd86ab056ed0edbaf7b"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aa342eeec769c7cd86ab056ed0edbaf7b">org.lightjason.agentspeak.action.builtin.TestCActionGraph.incidentverticesmultiple</a></div><div class="ttdeci">final void incidentverticesmultiple()</div><div class="ttdoc">test incident-vertices multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01078">TestCActionGraph.java:1078</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_adfec5caea0f7d680763c5d5ad6240666"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#adfec5caea0f7d680763c5d5ad6240666">org.lightjason.agentspeak.action.builtin.TestCActionGraph.neigborsmultiple</a></div><div class="ttdeci">final void neigborsmultiple()</div><div class="ttdoc">test neigbors multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01375">TestCActionGraph.java:1375</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorMultiple_htm"><div class="ttname"><a href="../../d6/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsSuccessorMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIsSuccessorMultiple</a></div><div class="ttdoc">checks all vertex tuples if the first part the successor of the second on a single graph instance...</div><div class="ttdef"><b>Definition:</b> <a href="../../de/df8/CIsSuccessorMultiple_8java_source.htm#l00041">CIsSuccessorMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex_htm_aaee346e61264a7828eca54b4ae38edff"><div class="ttname"><a href="../../d4/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsVertex.htm#aaee346e61264a7828eca54b4ae38edff">org.lightjason.agentspeak.action.builtin.graph.CContainsVertex.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d56/CContainsVertex_8java_source.htm#l00066">CContainsVertex.java:66</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_ac735c0eb544971808786a9b33776ffe7"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#ac735c0eb544971808786a9b33776ffe7">org.lightjason.agentspeak.IBaseTest.execute</a></div><div class="ttdeci">void execute(final Method p_method, final Set&lt; Method &gt; p_before, final Object... p_arguments)</div><div class="ttdoc">invokes the method within the current object context </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00108">IBaseTest.java:108</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeMultiple_htm"><div class="ttname"><a href="../../d0/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CRemoveEdgeMultiple</a></div><div class="ttdoc">removes edges from any graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d5d/CRemoveEdgeMultiple_8java_source.htm#l00042">CRemoveEdgeMultiple.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a3aa65bfffad66507c2e75c71e6f780af"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a3aa65bfffad66507c2e75c71e6f780af">org.lightjason.agentspeak.action.builtin.TestCActionGraph.findedgesingle</a></div><div class="ttdeci">final void findedgesingle()</div><div class="ttdoc">test find-edge single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00629">TestCActionGraph.java:629</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a116899d7fe161f5cd828486450c73bc6"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a116899d7fe161f5cd828486450c73bc6">org.lightjason.agentspeak.action.builtin.TestCActionGraph.oppositemultiple</a></div><div class="ttdeci">final void oppositemultiple()</div><div class="ttdoc">test opposite multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01497">TestCActionGraph.java:1497</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListMultiple_htm"><div class="ttname"><a href="../../db/dff/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CEdgeListMultiple</a></div><div class="ttdoc">returns all edges of all vertex tuples for a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d9b/CEdgeListMultiple_8java_source.htm#l00044">CEdgeListMultiple.java:44</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a01b3e4a208f44e4f8909bf09a049030d"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a01b3e4a208f44e4f8909bf09a049030d">org.lightjason.agentspeak.action.builtin.TestCActionGraph.vertexremovemultiple</a></div><div class="ttdeci">final void vertexremovemultiple()</div><div class="ttdoc">test remove vertex multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01654">TestCActionGraph.java:1654</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeMultiple_htm"><div class="ttname"><a href="../../de/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COppositeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.COppositeMultiple</a></div><div class="ttdoc">returns the opposit of each vertex and edge tuple of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d51/COppositeMultiple_8java_source.htm#l00041">COppositeMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a9ada2f0e3638fc7832b8700605edb606"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9ada2f0e3638fc7832b8700605edb606">org.lightjason.agentspeak.action.builtin.TestCActionGraph.incidentcountsingle</a></div><div class="ttdeci">final void incidentcountsingle()</div><div class="ttdoc">test incident-count single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00991">TestCActionGraph.java:991</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_htm"><div class="ttname"><a href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">org.lightjason.agentspeak.action</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeMultiple_htm"><div class="ttname"><a href="../../d3/d4c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddEdgeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CAddEdgeMultiple</a></div><div class="ttdoc">add multiple edges to a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d68/CAddEdgeMultiple_8java_source.htm#l00043">CAddEdgeMultiple.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a928c93d96aa77f1e2dbe411b9041b802"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a928c93d96aa77f1e2dbe411b9041b802">org.lightjason.agentspeak.action.builtin.TestCActionGraph.outedgemultiple</a></div><div class="ttdeci">final void outedgemultiple()</div><div class="ttdoc">test outedges multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01562">TestCActionGraph.java:1562</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborSingle_htm"><div class="ttname"><a href="../../d6/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsNeighborSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIsNeighborSingle</a></div><div class="ttdoc">checks if a vertex is neighbor of another vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d23/CIsNeighborSingle_8java_source.htm#l00041">CIsNeighborSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a02d4b9a174759e173c7049bb99a6a2a0"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a02d4b9a174759e173c7049bb99a6a2a0">org.lightjason.agentspeak.action.builtin.TestCActionGraph.outedgessingle</a></div><div class="ttdeci">final void outedgessingle()</div><div class="ttdoc">test outedges single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01520">TestCActionGraph.java:1520</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm_a037c4a7c6111fafc70081ed36d929833"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">org.lightjason.agentspeak.language.ITerm.raw</a></div><div class="ttdeci">&lt; T &gt; T raw()</div><div class="ttdoc">cast to any raw value type </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a6277dc451044f4d4b739c87387dbdb05"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6277dc451044f4d4b739c87387dbdb05">org.lightjason.agentspeak.action.builtin.TestCActionGraph.addvertexsingle</a></div><div class="ttdeci">final void addvertexsingle()</div><div class="ttdoc">test add-vertex single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00139">TestCActionGraph.java:139</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentMultiple_htm"><div class="ttname"><a href="../../d8/dcf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsIncidentMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIsIncidentMultiple</a></div><div class="ttdoc">checks if a vertex and edge tuple is incident for a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CIsIncidentMultiple_8java_source.htm#l00041">CIsIncidentMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_af2ab14c21916b2ed8c49e56d57d31b9e"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af2ab14c21916b2ed8c49e56d57d31b9e">org.lightjason.agentspeak.action.builtin.TestCActionGraph.inedgesmultiple</a></div><div class="ttdeci">final void inedgesmultiple()</div><div class="ttdoc">test in-edge </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00902">TestCActionGraph.java:902</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree_htm_aa6205296c8a843bb5cf4f3d96f77e266"><div class="ttname"><a href="../../d9/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CSpanningTree.htm#aa6205296c8a843bb5cf4f3d96f77e266">org.lightjason.agentspeak.action.builtin.graph.CSpanningTree.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d8c/CSpanningTree_8java_source.htm#l00074">CSpanningTree.java:74</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a9a1537a96f0db6ebdb6b46692000f7c6"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9a1537a96f0db6ebdb6b46692000f7c6">org.lightjason.agentspeak.action.builtin.TestCActionGraph.degreesingle</a></div><div class="ttdeci">final void degreesingle()</div><div class="ttdoc">test degree single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00460">TestCActionGraph.java:460</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ab5a782c8b2b4e0d7b5882b1e8592bad3"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ab5a782c8b2b4e0d7b5882b1e8592bad3">org.lightjason.agentspeak.action.builtin.TestCActionGraph.adjacencymatrix</a></div><div class="ttdeci">final void adjacencymatrix()</div><div class="ttdoc">test adjacency matrix </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00327">TestCActionGraph.java:327</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyPathAlgorithm_htm_a0ce72ef967ac0d3946076f6d2114395a"><div class="ttname"><a href="../../d4/d2b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1IApplyPathAlgorithm.htm#a0ce72ef967ac0d3946076f6d2114395a">org.lightjason.agentspeak.action.builtin.graph.IApplyPathAlgorithm.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d55/IApplyPathAlgorithm_8java_source.htm#l00069">IApplyPathAlgorithm.java:69</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesSingle_htm"><div class="ttname"><a href="../../d7/d84/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesSingle.htm">org.lightjason.agentspeak.action.builtin.graph.COutEdgesSingle</a></div><div class="ttdoc">returns outgoing edges of a vertex of each graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d44/COutEdgesSingle_8java_source.htm#l00045">COutEdgesSingle.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorMultiple_htm"><div class="ttname"><a href="../../d4/dd1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIsPredecessorMultiple</a></div><div class="ttdoc">checks all vertex tuples if the first part the predecessor of the second on a single graph instance...</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d39/CIsPredecessorMultiple_8java_source.htm#l00041">CIsPredecessorMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeMultiple_htm"><div class="ttname"><a href="../../d6/dd2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutDegreeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.COutDegreeMultiple</a></div><div class="ttdoc">returns the out-degree of each vertex of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d6e/COutDegreeMultiple_8java_source.htm#l00041">COutDegreeMultiple.java:41</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_htm"><div class="ttname"><a href="../../d5/d9a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph.htm">org.lightjason.agentspeak.action.builtin.graph</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d68/CAddEdgeMultiple_8java_source.htm#l00024">CAddEdgeMultiple.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ad389973386a6913b6869a1e88d7b8f8a"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad389973386a6913b6869a1e88d7b8f8a">org.lightjason.agentspeak.action.builtin.TestCActionGraph.issuccesormultiple</a></div><div class="ttdeci">final void issuccesormultiple()</div><div class="ttdoc">test is-successor multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01144">TestCActionGraph.java:1144</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm_a95c5d82dfc6d8ba46b478b1e5d34f1e5"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">org.lightjason.agentspeak.language.CRawTerm.from</a></div><div class="ttdeci">static&lt; N &gt; CRawTerm&lt; N &gt; from(final N p_value)</div><div class="ttdoc">factory for a raw term </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00104">CRawTerm.java:104</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a9d94e3809440ccdbb269f028d0ee7fdf"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9d94e3809440ccdbb269f028d0ee7fdf">org.lightjason.agentspeak.action.builtin.TestCActionGraph.containsedge</a></div><div class="ttdeci">final void containsedge()</div><div class="ttdoc">test contains-edge </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00365">TestCActionGraph.java:365</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsMultiple_htm"><div class="ttname"><a href="../../d8/d25/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CNeighborsMultiple</a></div><div class="ttdoc">returns the neighbors of each vertex of single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/da4/CNeighborsMultiple_8java_source.htm#l00044">CNeighborsMultiple.java:44</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexMultiple_htm"><div class="ttname"><a href="../../d8/d71/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CRemoveVertexMultiple</a></div><div class="ttdoc">removes any vertices from a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/de8/CRemoveVertexMultiple_8java_source.htm#l00040">CRemoveVertexMultiple.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesMultiple_htm"><div class="ttname"><a href="../../d5/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInEdgesMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CInEdgesMultiple</a></div><div class="ttdoc">returns incomming edges of all vertices of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/db9/CInEdgesMultiple_8java_source.htm#l00044">CInEdgesMultiple.java:44</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a1656fb425e3d4be530f5d09239e316cd"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a1656fb425e3d4be530f5d09239e316cd">org.lightjason.agentspeak.action.builtin.TestCActionGraph.edgelistsingle</a></div><div class="ttdeci">final void edgelistsingle()</div><div class="ttdoc">test edgelist single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00678">TestCActionGraph.java:678</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_abbce15a83a3e131cea88f386ef09cc68"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abbce15a83a3e131cea88f386ef09cc68">org.lightjason.agentspeak.action.builtin.TestCActionGraph.endpointmultiple</a></div><div class="ttdeci">final void endpointmultiple()</div><div class="ttdoc">test endpoint multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00787">TestCActionGraph.java:787</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix_htm"><div class="ttname"><a href="../../d9/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix.htm">org.lightjason.agentspeak.action.builtin.graph.CAdjacencyMatrix</a></div><div class="ttdoc">creates from a graph the adjacency matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/db2/CAdjacencyMatrix_8java_source.htm#l00079">CAdjacencyMatrix.java:79</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount_htm_ac98897baaaca63a76f82f615e7133469"><div class="ttname"><a href="../../df/d41/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CVertexCount.htm#ac98897baaaca63a76f82f615e7133469">org.lightjason.agentspeak.action.builtin.graph.CVertexCount.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d8e/CVertexCount_8java_source.htm#l00064">CVertexCount.java:64</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a2af0133efc8a245d6910daadbac4a69f"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a2af0133efc8a245d6910daadbac4a69f">org.lightjason.agentspeak.action.builtin.TestCActionGraph.addvertexmultiple</a></div><div class="ttdeci">final void addvertexmultiple()</div><div class="ttdoc">test add-vertex multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00162">TestCActionGraph.java:162</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListSingle_htm"><div class="ttname"><a href="../../de/d1a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdgeListSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CEdgeListSingle</a></div><div class="ttdoc">returns all edges of two vertices of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d0f/CEdgeListSingle_8java_source.htm#l00046">CEdgeListSingle.java:46</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_af5c04877619a9a79c862757b9527cd65"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#af5c04877619a9a79c862757b9527cd65">org.lightjason.agentspeak.action.builtin.TestCActionGraph.incidentverticessingle</a></div><div class="ttdeci">final void incidentverticessingle()</div><div class="ttdoc">test incident-vertices single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01038">TestCActionGraph.java:1038</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorSingle_htm"><div class="ttname"><a href="../../d5/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIsPredecessorSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIsPredecessorSingle</a></div><div class="ttdoc">checks if a vertex is predecessor of another vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d6d/CIsPredecessorSingle_8java_source.htm#l00041">CIsPredecessorSingle.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexSingle_htm"><div class="ttname"><a href="../../dd/d8a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveVertexSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CRemoveVertexSingle</a></div><div class="ttdoc">removes a vertex from each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/da4/CRemoveVertexSingle_8java_source.htm#l00040">CRemoveVertexSingle.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a110090c0055e2a5c3a8baea6fbaea8bd"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a110090c0055e2a5c3a8baea6fbaea8bd">org.lightjason.agentspeak.action.builtin.TestCActionGraph.vertexcount</a></div><div class="ttdeci">final void vertexcount()</div><div class="ttdoc">test vertex-count </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00228">TestCActionGraph.java:228</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeSingle_htm"><div class="ttname"><a href="../../d2/db1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CDegreeSingle</a></div><div class="ttdoc">returns the vertex degree of multiple graphs. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d82/CDegreeSingle_8java_source.htm#l00042">CDegreeSingle.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountMultiple_htm"><div class="ttname"><a href="../../d1/d5a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentCountMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CIncidentCountMultiple</a></div><div class="ttdoc">returns the number of vertices that are incident to each edge of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d49/CIncidentCountMultiple_8java_source.htm#l00041">CIncidentCountMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge_htm_a6a9fe10ec7042c051362358dfc9c8743"><div class="ttname"><a href="../../d2/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CContainsEdge.htm#a6a9fe10ec7042c051362358dfc9c8743">org.lightjason.agentspeak.action.builtin.graph.CContainsEdge.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d15/CContainsEdge_8java_source.htm#l00066">CContainsEdge.java:66</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm">org.lightjason.agentspeak.action.builtin.TestCActionGraph</a></div><div class="ttdoc">test graph actions </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00111">TestCActionGraph.java:111</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CCreate_htm"><div class="ttname"><a href="../../d2/db3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.graph.CCreate</a></div><div class="ttdoc">creates a graph data structure. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d81/graph_2CCreate_8java_source.htm#l00064">graph/CCreate.java:64</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_acf12f7d75d73bb0e026590b13356e8bd"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#acf12f7d75d73bb0e026590b13356e8bd">org.lightjason.agentspeak.action.builtin.TestCActionGraph.removeedgesingle</a></div><div class="ttdeci">final void removeedgesingle()</div><div class="ttdoc">test remove edge single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01760">TestCActionGraph.java:1760</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a5169a958839be19537048c7eccb69090"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a5169a958839be19537048c7eccb69090">org.lightjason.agentspeak.action.builtin.TestCActionGraph.neigborssingle</a></div><div class="ttdeci">final void neigborssingle()</div><div class="ttdoc">test neigbors single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01332">TestCActionGraph.java:1332</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_abaea9777612bb9ae862635d9f83bd4fa"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#abaea9777612bb9ae862635d9f83bd4fa">org.lightjason.agentspeak.action.builtin.TestCActionGraph.incidentcountmultiple</a></div><div class="ttdeci">final void incidentcountmultiple()</div><div class="ttdoc">test incident-count single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01015">TestCActionGraph.java:1015</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeSingle_htm"><div class="ttname"><a href="../../d0/db0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CRemoveEdgeSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CRemoveEdgeSingle</a></div><div class="ttdoc">remove an edge from any graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df8/CRemoveEdgeSingle_8java_source.htm#l00040">CRemoveEdgeSingle.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_aad7b304e14aee22d820a10dbe5050546"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#aad7b304e14aee22d820a10dbe5050546">org.lightjason.agentspeak.action.builtin.TestCActionGraph.predecessorcountsingle</a></div><div class="ttdeci">final void predecessorcountsingle()</div><div class="ttdoc">test predecessor count single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01603">TestCActionGraph.java:1603</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a79755be24b9df4facb66789c8b57823a"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a79755be24b9df4facb66789c8b57823a">org.lightjason.agentspeak.action.builtin.TestCActionGraph.predecessorcountmultiple</a></div><div class="ttdeci">final void predecessorcountmultiple()</div><div class="ttdoc">test predecessor count multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01629">TestCActionGraph.java:1629</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeMultiple_htm"><div class="ttname"><a href="../../d4/dec/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CInDegreeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CInDegreeMultiple</a></div><div class="ttdoc">returns the in-degree of multiple vertices of a single graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/dca/CInDegreeMultiple_8java_source.htm#l00041">CInDegreeMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeMultiple_htm"><div class="ttname"><a href="../../d8/ddd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CDegreeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CDegreeMultiple</a></div><div class="ttdoc">returns multiple vertex degrees of a single graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dc1/CDegreeMultiple_8java_source.htm#l00042">CDegreeMultiple.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ac55a4fa5b7c086fded16ced0231c5607"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ac55a4fa5b7c086fded16ced0231c5607">org.lightjason.agentspeak.action.builtin.TestCActionGraph.oppositesingle</a></div><div class="ttdeci">final void oppositesingle()</div><div class="ttdoc">test opposite single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01473">TestCActionGraph.java:1473</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeMultiple_htm"><div class="ttname"><a href="../../dd/d5b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CFindEdgeMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CFindEdgeMultiple</a></div><div class="ttdoc">returns all edges between vertices for a graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d69/CFindEdgeMultiple_8java_source.htm#l00041">CFindEdgeMultiple.java:41</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountSingle_htm"><div class="ttname"><a href="../../d3/dc1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CNeighborsCountSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CNeighborsCountSingle</a></div><div class="ttdoc">returns the number neighbors of a vertex of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/ddf/CNeighborsCountSingle_8java_source.htm#l00042">CNeighborsCountSingle.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesMultiple_htm"><div class="ttname"><a href="../../d9/db7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1COutEdgesMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.COutEdgesMultiple</a></div><div class="ttdoc">returns outgoing edges of any vertex of a single graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/da0/COutEdgesMultiple_8java_source.htm#l00043">COutEdgesMultiple.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_ad8a283d4f02d3ef7195c9d8bc870cbeb"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#ad8a283d4f02d3ef7195c9d8bc870cbeb">org.lightjason.agentspeak.action.builtin.TestCActionGraph.successorcountsingle</a></div><div class="ttdeci">final void successorcountsingle()</div><div class="ttdoc">test successor count single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01708">TestCActionGraph.java:1708</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix_htm_a05ef85eea335b3e1e2fa88656d48d18c"><div class="ttname"><a href="../../d9/d7e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAdjacencyMatrix.htm#a05ef85eea335b3e1e2fa88656d48d18c">org.lightjason.agentspeak.action.builtin.graph.CAdjacencyMatrix.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/db2/CAdjacencyMatrix_8java_source.htm#l00095">CAdjacencyMatrix.java:95</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a76288f0ee922524d7928a512f96390b9"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a76288f0ee922524d7928a512f96390b9">org.lightjason.agentspeak.action.builtin.TestCActionGraph.vertices</a></div><div class="ttdeci">final void vertices()</div><div class="ttdoc">test vertices </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00278">TestCActionGraph.java:278</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexMultiple_htm"><div class="ttname"><a href="../../df/d6e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CAddVertexMultiple.htm">org.lightjason.agentspeak.action.builtin.graph.CAddVertexMultiple</a></div><div class="ttdoc">adds multiple vertices to a single graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d0a/CAddVertexMultiple_8java_source.htm#l00041">CAddVertexMultiple.java:41</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges_htm"><div class="ttname"><a href="../../d4/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CEdges.htm">org.lightjason.agentspeak.action.builtin.graph.CEdges</a></div><div class="ttdoc">returns for a graph all edges. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/da7/CEdges_8java_source.htm#l00050">CEdges.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">org.lightjason.agentspeak.language.CRawTerm</a></div><div class="ttdoc">term structure for simple datatypes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00045">CRawTerm.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a0236a2b93c8468ce8d2c9b0941b500b5"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a0236a2b93c8468ce8d2c9b0941b500b5">org.lightjason.agentspeak.action.builtin.TestCActionGraph.isneighborsingle</a></div><div class="ttdeci">final void isneighborsingle()</div><div class="ttdoc">test is-neighbor single </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l01275">TestCActionGraph.java:1275</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a6c5f3c1c76b54e1dd99322083041a260"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a6c5f3c1c76b54e1dd99322083041a260">org.lightjason.agentspeak.action.builtin.TestCActionGraph.indegreemultiple</a></div><div class="ttdeci">final void indegreemultiple()</div><div class="ttdoc">test in-degree multiple </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00838">TestCActionGraph.java:838</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesSingle_htm"><div class="ttname"><a href="../../d1/dac/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1graph_1_1CIncidentVerticesSingle.htm">org.lightjason.agentspeak.action.builtin.graph.CIncidentVerticesSingle</a></div><div class="ttdoc">returns a list of incident vertices of an edge of each graph instance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/de7/CIncidentVerticesSingle_8java_source.htm#l00043">CIncidentVerticesSingle.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph_htm_a9e44d318b1d532c0b3ef105cca959a83"><div class="ttname"><a href="../../d7/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionGraph.htm#a9e44d318b1d532c0b3ef105cca959a83">org.lightjason.agentspeak.action.builtin.TestCActionGraph.inedgessingle</a></div><div class="ttdeci">final void inedgessingle()</div><div class="ttdoc">test in-edge </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5f/TestCActionGraph_8java_source.htm#l00861">TestCActionGraph.java:861</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_5c7d9bd26293bcba3b50ce1327e8211c.htm">action</a></li><li class="navelem"><a class="el" href="../../dir_f40dbd565273397ba32344fb1fccd977.htm">builtin</a></li><li class="navelem"><a class="el" href="../../d5/d5f/TestCActionGraph_8java.htm">TestCActionGraph.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
