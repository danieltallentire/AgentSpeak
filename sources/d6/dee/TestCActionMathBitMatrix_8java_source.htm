<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCActionMathBitMatrix.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d6/dee/TestCActionMathBitMatrix_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCActionMathBitMatrix.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/dee/TestCActionMathBitMatrix_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.action.builtin;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> cern.colt.bitvector.BitMatrix;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> cern.colt.bitvector.BitVector;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> cern.colt.matrix.DoubleMatrix2D;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.codepoetics.protonpack.StreamUtils;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProvider;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProviderRunner;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.UseDataProvider;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.ImmutableTriple;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.Triple;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Before;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.runner.RunWith;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">IAction</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../dd/d72/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCreate.htm">CCreate</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../db/d64/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CAnd.htm">CAnd</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d1/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd.htm">CNAnd</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNot.htm">CNot</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d7/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRow.htm">CRow</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d1/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumn.htm">CColumn</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../de/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector.htm">CToVector</a>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d1/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount.htm">CTrueCount</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d3/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount.htm">CFalseCount</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm">CBoolValue</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d7/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumns.htm">CColumns</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../dc/deb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRows.htm">CRows</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../de/d51/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy.htm">CCopy</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d1/da2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CDimension.htm">CDimension</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d7/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance.htm">CHammingDistance</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm">CNumericValue</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d8/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CXor.htm">CXor</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../d6/d44/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CSize.htm">CSize</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../da/d0e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1COr.htm">COr</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">math</a>.<a class="code" href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">bit</a>.<a class="code" href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">matrix</a>.<a class="code" href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm">CToBlas</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">execution</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">import</span> java.util.*;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert.assertTrue;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;@RunWith( DataProviderRunner.class )</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm">   76</a></span>&#160;public class <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm">TestCActionMathBitMatrix</a> extends <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#aeec6726bb83ca209545758a00008e8f5">   82</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> BitMatrix MATRIX1 = <span class="keyword">new</span> BitMatrix( 2, 2 );</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a571a4d7a05ae0337e19f31012ce081d7">   87</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> BitMatrix MATRIX2 = <span class="keyword">new</span> BitMatrix( 2, 2 );</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    @Before</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a470062b1a4f57118d64bf765f1096a60">   94</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a470062b1a4f57118d64bf765f1096a60">initialize</a>()</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        MATRIX1.put( 0, 1, <span class="keyword">false</span> );</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        MATRIX1.put( 1, 0, <span class="keyword">false</span> );</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        MATRIX1.put( 1, 1, <span class="keyword">true</span> );</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        MATRIX1.put( 0, 0, <span class="keyword">true</span> );</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        MATRIX2.put( 0, 1, <span class="keyword">true</span> );</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        MATRIX2.put( 1, 0, <span class="keyword">true</span> );</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        MATRIX2.put( 1, 1, <span class="keyword">true</span> );</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        MATRIX2.put( 0, 0, <span class="keyword">false</span> );</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    @DataProvider</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a1cf0a6215a05d8f9173e90df7d821fe8">  112</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Object[] <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a1cf0a6215a05d8f9173e90df7d821fe8">generator</a>()</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">return</span> testcase(</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                Stream.of( MATRIX1, MATRIX2 ),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                Stream.of(</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        <a class="code" href="../../d7/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumns.htm">CColumns</a>.class,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        <a class="code" href="../../d3/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount.htm">CFalseCount</a>.class,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        <a class="code" href="../../d1/da2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CDimension.htm">CDimension</a>.class,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        <a class="code" href="../../de/d51/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy.htm">CCopy</a>.class,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        <a class="code" href="../../d1/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount.htm">CTrueCount</a>.class,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                        <a class="code" href="../../dd/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize.htm">CSize</a>.class,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        <a class="code" href="../../dc/deb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRows.htm">CRows</a>.class,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <a class="code" href="../../dd/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot.htm">CNot</a>.class,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        <a class="code" href="../../d7/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr.htm">COr</a>.class,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        <a class="code" href="../../dc/d07/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd.htm">CAnd</a>.class,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        <a class="code" href="../../d3/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor.htm">CXor</a>.class,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        <a class="code" href="../../d1/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd.htm">CNAnd</a>.class,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                        <a class="code" href="../../d7/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance.htm">CHammingDistance</a>.class</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                ),</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                Stream.of( 2D, 2D ),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                Stream.of( 2D, 1D ),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                Stream.of( 2D, 2D, 2D, 2D ),</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                Stream.of( MATRIX1, MATRIX2 ),</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                Stream.of( 2D, 3D ),</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                Stream.of( 4, 4 ),</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                Stream.of( 2D, 2D ),</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                Stream.of(),</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                Stream.of(),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                Stream.of(),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                Stream.of(),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                Stream.of(),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                Stream.of( 3D )</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        ).toArray();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    @SafeVarargs</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;varargs&quot;</span> )</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a73c8d35000fee320e0175836cd1d3408">  161</a></span>&#160;    private static Stream&lt;Object&gt; testcase( final Stream&lt;Object&gt; p_input, final Stream&lt;Class&lt;?&gt;&gt; p_classes, final Stream&lt;Object&gt;... p_classresult )</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_input = p_input.map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() );</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> StreamUtils.zip(</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                p_classes,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                Arrays.stream( p_classresult ),</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            ( i, j ) -&gt; <span class="keyword">new</span> ImmutableTriple&lt;&gt;( l_input, i, j )</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        );</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    @Test</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    @UseDataProvider( <span class="stringliteral">&quot;generator&quot;</span> )</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a2a753b5ddcf3535e26d33d299dcce468">  181</a></span>&#160;    public final <span class="keywordtype">void</span> action( final Triple&lt;List&lt;<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>&gt;, Class&lt;? extends <a class="code" href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">IAction</a>&gt;, Stream&lt;Object&gt;&gt; p_input )</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        throws IllegalAccessException, InstantiationException</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        p_input.getMiddle().newInstance().execute(</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">false</span>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            p_input.getLeft(),</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            l_return</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        );</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        Assert.assertArrayEquals(</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                p_input.getMiddle().toGenericString(),</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).toArray(),</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                p_input.getRight().toArray()</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        );</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    @Test</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#af7b8fb2601bc464a78f9df80256e7f58">  204</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#af7b8fb2601bc464a78f9df80256e7f58">create</a>()</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">CCreate</a>().<a class="code" href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">execute</a>(</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            Stream.of( 2, 2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            l_return</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        );</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        assertTrue( l_return.get( 0 ).raw() instanceof BitMatrix );</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitMatrix&gt;raw().size(), 4 );</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitMatrix&gt;raw().rows(), 2 );</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitMatrix&gt;raw().columns(), 2 );</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    @Test</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a348d5610a1746998f38de58d17705e93">  225</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a348d5610a1746998f38de58d17705e93">tobitvector</a>()</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../de/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector.htm">CToVector</a>().<a class="code" href="../../de/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector.htm#aa27ce8acc38940397a0963a2f214d0c7">execute</a>(</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            Stream.of( MATRIX2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            l_return</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        );</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof BitVector );</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitVector&gt;raw().size(), 4 );</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keyword">final</span> BitVector l_bitvector = l_return.get( 0 ).raw();</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        Assert.assertEquals( l_bitvector.get( 0 ), true );</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        Assert.assertEquals( l_bitvector.get( 1 ), true );</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        Assert.assertEquals( l_bitvector.get( 2 ), true );</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        Assert.assertEquals( l_bitvector.get( 3 ), false );</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    @Test</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a18bf89654f33bb88a3586a784a76fdc8">  251</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a18bf89654f33bb88a3586a784a76fdc8">column</a>()</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d1/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumn.htm">CColumn</a>().<a class="code" href="../../d8/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1IRowColumn.htm#aa6666e421253ac2e498b74527d432832">execute</a>(</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            Stream.of( 1, MATRIX2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            l_return</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        );</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof BitVector );</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitVector&gt;raw().size(), 2 );</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keyword">final</span> BitVector l_bitvector = l_return.get( 0 ).raw();</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        Assert.assertEquals( l_bitvector.get( 0 ), true );</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        Assert.assertEquals( l_bitvector.get( 1 ), true );</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    @Test</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a599c94b3586efe1c56cfc0a1fedf4926">  275</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a599c94b3586efe1c56cfc0a1fedf4926">row</a>()</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRow.htm">CRow</a>().<a class="code" href="../../d8/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1IRowColumn.htm#aa6666e421253ac2e498b74527d432832">execute</a>(</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            Stream.of( 1, MATRIX2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            l_return</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        );</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof BitVector );</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;BitVector&gt;raw().size(), 2 );</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">final</span> BitVector l_bitvector = l_return.get( 0 ).raw();</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        Assert.assertEquals( l_bitvector.get( 0 ), true );</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        Assert.assertEquals( l_bitvector.get( 1 ), true );</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    @Test</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a518192b27c35fdfde90b8cb5a12c4ff6">  299</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a518192b27c35fdfde90b8cb5a12c4ff6">numericvalue</a>()</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    {</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm">CNumericValue</a>().<a class="code" href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm#a1164760401c709442c3d6bd44183f7eb">execute</a>(</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            Stream.of( MATRIX1, 1, 0 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            l_return</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        );</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Number&gt;raw(), 0D );</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    @Test</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae1d56013982fff7a3f1da3ebc48ee46f">  316</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae1d56013982fff7a3f1da3ebc48ee46f">boolValue</a>()</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm">CBoolValue</a>().<a class="code" href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm#ad601376fba3ab5b87d6557ccfb0fc4d7">execute</a>(</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            Stream.of( MATRIX2, 0, 0 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            l_return</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        );</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;Boolean&gt;raw(), false );</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    @Test</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae5a9250a70a188237759c965efeec608">  333</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae5a9250a70a188237759c965efeec608">toblas</a>()</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keyword">final</span> Double[][] l_result = {{0.0, 1.0}, {1.0, 1.0}};</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm">CToBlas</a>().<a class="code" href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm#a513fe8d2e2604510d9d26caf0db7b235">execute</a>(</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            Stream.of( MATRIX2 ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            l_return</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        );</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof DoubleMatrix2D );</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <span class="keyword">final</span> DoubleMatrix2D l_blas = l_return.get( 0 ).raw();</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        Assert.assertEquals( l_blas.size(), 4 );</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        Assert.assertArrayEquals( l_blas.toArray(), l_result );</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a56b97ad17b04160795f039a778d1e315">  358</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a56b97ad17b04160795f039a778d1e315">main</a>( <span class="keyword">final</span> String[] p_args )</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm">TestCActionMathBitMatrix</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">invoketest</a>();</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;}</div><div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_htm"><div class="ttname"><a href="../../d9/db7/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix</a></div><div class="ttdef"><b>Definition:</b> <a href="../../da/d8b/math_2bit_2matrix_2CAnd_8java_source.htm#l00024">math/bit/matrix/CAnd.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue_htm_a1164760401c709442c3d6bd44183f7eb"><div class="ttname"><a href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm#a1164760401c709442c3d6bd44183f7eb">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNumericValue.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dec/matrix_2CNumericValue_8java_source.htm#l00075">matrix/CNumericValue.java:75</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCreate_htm"><div class="ttname"><a href="../../dd/d72/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CCreate</a></div><div class="ttdoc">creates a bit matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d3b/math_2bit_2matrix_2CCreate_8java_source.htm#l00049">math/bit/matrix/CCreate.java:49</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance_htm"><div class="ttname"><a href="../../d7/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CHammingDistance.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CHammingDistance</a></div><div class="ttdoc">calculates the hamming distance. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d07/matrix_2CHammingDistance_8java_source.htm#l00050">matrix/CHammingDistance.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1IRowColumn_htm_aa6666e421253ac2e498b74527d432832"><div class="ttname"><a href="../../d8/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1IRowColumn.htm#aa6666e421253ac2e498b74527d432832">org.lightjason.agentspeak.action.builtin.math.bit.matrix.IRowColumn.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d78/IRowColumn_8java_source.htm#l00070">IRowColumn.java:70</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_htm"><div class="ttname"><a href="../../db/d0a/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math.htm">org.lightjason.agentspeak.action.builtin.math</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CSize_htm"><div class="ttname"><a href="../../d6/d44/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CSize.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CSize</a></div><div class="ttdoc">returns the size (rows * columns) of the matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/ddc/math_2bit_2matrix_2CSize_8java_source.htm#l00048">math/bit/matrix/CSize.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas_htm"><div class="ttname"><a href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToBlas</a></div><div class="ttdoc">converts the bit matrix to a blas matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd0/matrix_2CToBlas_8java_source.htm#l00055">matrix/CToBlas.java:55</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00045">IBaseTest.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumns_htm"><div class="ttname"><a href="../../d7/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumns.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CColumns</a></div><div class="ttdoc">returns the column number of a bit matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d79/bit_2matrix_2CColumns_8java_source.htm#l00047">bit/matrix/CColumns.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRow_htm"><div class="ttname"><a href="../../d7/dbe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRow.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CRow</a></div><div class="ttdoc">returns a single row of a bit matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d31/bit_2matrix_2CRow_8java_source.htm#l00042">bit/matrix/CRow.java:42</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm_a2fbdd035b68cfb71c6ee6bd92c799cdf"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">org.lightjason.agentspeak.language.execution.IContext.EMPTYPLAN</a></div><div class="ttdeci">IContext EMPTYPLAN</div><div class="ttdoc">empty context with plan </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00047">IContext.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_a153155d721393465604d8e795ad2fc31"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">org.lightjason.agentspeak.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00056">IBaseTest.java:56</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a348d5610a1746998f38de58d17705e93"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a348d5610a1746998f38de58d17705e93">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.tobitvector</a></div><div class="ttdeci">final void tobitvector()</div><div class="ttdoc">test toBitVector </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00225">TestCActionMathBitMatrix.java:225</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd_htm"><div class="ttname"><a href="../../dc/d07/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CAnd.htm">org.lightjason.agentspeak.action.builtin.bool.CAnd</a></div><div class="ttdoc">combines all arguments to a single result with the and-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d8a/bool_2CAnd_8java_source.htm#l00048">bool/CAnd.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a1cf0a6215a05d8f9173e90df7d821fe8"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a1cf0a6215a05d8f9173e90df7d821fe8">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.generator</a></div><div class="ttdeci">static Object [] generator()</div><div class="ttdoc">data provider generator </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00112">TestCActionMathBitMatrix.java:112</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm_ae8877b7dcb9693c3e108a4dff67549f5"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm#ae8877b7dcb9693c3e108a4dff67549f5">org.lightjason.agentspeak.action.builtin.collection.list.CCreate.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00068">collection/list/CCreate.java:68</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue_htm"><div class="ttname"><a href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNumericValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNumericValue</a></div><div class="ttdoc">returns for the index tuple a numeric value. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dec/matrix_2CNumericValue_8java_source.htm#l00051">matrix/CNumericValue.java:51</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot_htm"><div class="ttname"><a href="../../dd/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CNot.htm">org.lightjason.agentspeak.action.builtin.bool.CNot</a></div><div class="ttdoc">inverts all argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/ddb/bool_2CNot_8java_source.htm#l00048">bool/CNot.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_htm"><div class="ttname"><a href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">org.lightjason.agentspeak.action.builtin</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_htm"><div class="ttname"><a href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">org.lightjason.agentspeak.language.execution</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">org.lightjason.agentspeak.language.execution.IContext</a></div><div class="ttdoc">execution context with local data </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00042">IContext.java:42</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction_htm"><div class="ttname"><a href="../../dc/d53/interfaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1IAction.htm">org.lightjason.agentspeak.action.IAction</a></div><div class="ttdoc">external action interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d9f/IAction_8java_source.htm#l00038">IAction.java:38</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount_htm"><div class="ttname"><a href="../../d1/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CTrueCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CTrueCount</a></div><div class="ttdoc">returns the number of true values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d42/matrix_2CTrueCount_8java_source.htm#l00047">matrix/CTrueCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a518192b27c35fdfde90b8cb5a12c4ff6"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a518192b27c35fdfde90b8cb5a12c4ff6">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.numericvalue</a></div><div class="ttdeci">final void numericvalue()</div><div class="ttdoc">test numericvalue </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00299">TestCActionMathBitMatrix.java:299</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CXor_htm"><div class="ttname"><a href="../../d8/d9c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CXor.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CXor</a></div><div class="ttdoc">performs the logical xor operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d76/math_2bit_2matrix_2CXor_8java_source.htm#l00040">math/bit/matrix/CXor.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor_htm"><div class="ttname"><a href="../../d3/d4d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1CXor.htm">org.lightjason.agentspeak.action.builtin.bool.CXor</a></div><div class="ttdoc">combines all arguments to a single result with the xor-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d76/bool_2CXor_8java_source.htm#l00048">bool/CXor.java:48</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate_htm"><div class="ttname"><a href="../../d8/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1list_1_1CCreate.htm">org.lightjason.agentspeak.action.builtin.collection.list.CCreate</a></div><div class="ttdoc">creates a list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d56/collection_2list_2CCreate_8java_source.htm#l00050">collection/list/CCreate.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRows_htm"><div class="ttname"><a href="../../dc/deb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CRows.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CRows</a></div><div class="ttdoc">returns the row number of a matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/df2/bit_2matrix_2CRows_8java_source.htm#l00047">bit/matrix/CRows.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a56b97ad17b04160795f039a778d1e315"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a56b97ad17b04160795f039a778d1e315">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.main</a></div><div class="ttdeci">static void main(final String[] p_args)</div><div class="ttdoc">test call </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00358">TestCActionMathBitMatrix.java:358</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_ae1d56013982fff7a3f1da3ebc48ee46f"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae1d56013982fff7a3f1da3ebc48ee46f">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.boolValue</a></div><div class="ttdeci">final void boolValue()</div><div class="ttdoc">test boolean value </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00316">TestCActionMathBitMatrix.java:316</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas_htm_a513fe8d2e2604510d9d26caf0db7b235"><div class="ttname"><a href="../../dc/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToBlas.htm#a513fe8d2e2604510d9d26caf0db7b235">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToBlas.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd0/matrix_2CToBlas_8java_source.htm#l00079">matrix/CToBlas.java:79</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_htm"><div class="ttname"><a href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">org.lightjason.agentspeak.action</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector_htm_aa27ce8acc38940397a0963a2f214d0c7"><div class="ttname"><a href="../../de/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector.htm#aa27ce8acc38940397a0963a2f214d0c7">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToVector.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../db/df8/CToVector_8java_source.htm#l00067">CToVector.java:67</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue_htm_ad601376fba3ab5b87d6557ccfb0fc4d7"><div class="ttname"><a href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm#ad601376fba3ab5b87d6557ccfb0fc4d7">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CBoolValue.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d9f/matrix_2CBoolValue_8java_source.htm#l00075">matrix/CBoolValue.java:75</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount_htm"><div class="ttname"><a href="../../d3/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CFalseCount.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CFalseCount</a></div><div class="ttdoc">returns the number of false values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dfc/matrix_2CFalseCount_8java_source.htm#l00047">matrix/CFalseCount.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumn_htm"><div class="ttname"><a href="../../d1/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CColumn.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CColumn</a></div><div class="ttdoc">returns a single column of a bit matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d79/bit_2matrix_2CColumn_8java_source.htm#l00041">bit/matrix/CColumn.java:41</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm_a037c4a7c6111fafc70081ed36d929833"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">org.lightjason.agentspeak.language.ITerm.raw</a></div><div class="ttdeci">&lt; T &gt; T raw()</div><div class="ttdoc">cast to any raw value type </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_ae5a9250a70a188237759c965efeec608"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#ae5a9250a70a188237759c965efeec608">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.toblas</a></div><div class="ttdeci">final void toblas()</div><div class="ttdoc">test toblas </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00333">TestCActionMathBitMatrix.java:333</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNot_htm"><div class="ttname"><a href="../../d7/d90/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNot.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNot</a></div><div class="ttdoc">performs the logical not operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc0/math_2bit_2matrix_2CNot_8java_source.htm#l00047">math/bit/matrix/CNot.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a599c94b3586efe1c56cfc0a1fedf4926"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a599c94b3586efe1c56cfc0a1fedf4926">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.row</a></div><div class="ttdeci">final void row()</div><div class="ttdoc">test row </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00275">TestCActionMathBitMatrix.java:275</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm_a95c5d82dfc6d8ba46b478b1e5d34f1e5"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">org.lightjason.agentspeak.language.CRawTerm.from</a></div><div class="ttdeci">static&lt; N &gt; CRawTerm&lt; N &gt; from(final N p_value)</div><div class="ttdoc">factory for a raw term </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00104">CRawTerm.java:104</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_htm"><div class="ttname"><a href="../../dd/da5/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit.htm">org.lightjason.agentspeak.action.builtin.math.bit</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a18bf89654f33bb88a3586a784a76fdc8"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a18bf89654f33bb88a3586a784a76fdc8">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.column</a></div><div class="ttdeci">final void column()</div><div class="ttdoc">test column </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00251">TestCActionMathBitMatrix.java:251</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue_htm"><div class="ttname"><a href="../../da/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CBoolValue.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CBoolValue</a></div><div class="ttdoc">returns for the index tuple a boolean value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d9f/matrix_2CBoolValue_8java_source.htm#l00051">matrix/CBoolValue.java:51</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector_htm"><div class="ttname"><a href="../../de/d10/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CToVector.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CToVector</a></div><div class="ttdoc">converts the bit matrix into a bit vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/df8/CToVector_8java_source.htm#l00051">CToVector.java:51</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_af7b8fb2601bc464a78f9df80256e7f58"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#af7b8fb2601bc464a78f9df80256e7f58">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.create</a></div><div class="ttdeci">final void create()</div><div class="ttdoc">test create </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00204">TestCActionMathBitMatrix.java:204</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1COr_htm"><div class="ttname"><a href="../../da/d0e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1COr.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.COr</a></div><div class="ttdoc">performs the logical or operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dbe/math_2bit_2matrix_2COr_8java_source.htm#l00040">math/bit/matrix/COr.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CAnd_htm"><div class="ttname"><a href="../../db/d64/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CAnd.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CAnd</a></div><div class="ttdoc">performs the logical and operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d8b/math_2bit_2matrix_2CAnd_8java_source.htm#l00040">math/bit/matrix/CAnd.java:40</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix</a></div><div class="ttdoc">test math bit matrix functions </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00076">TestCActionMathBitMatrix.java:76</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr_htm"><div class="ttname"><a href="../../d7/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1bool_1_1COr.htm">org.lightjason.agentspeak.action.builtin.bool.COr</a></div><div class="ttdoc">combines all arguments to a single result with the or-operator. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9e/bool_2COr_8java_source.htm#l00048">bool/COr.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix_htm_a470062b1a4f57118d64bf765f1096a60"><div class="ttname"><a href="../../d7/d7b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionMathBitMatrix.htm#a470062b1a4f57118d64bf765f1096a60">org.lightjason.agentspeak.action.builtin.TestCActionMathBitMatrix.initialize</a></div><div class="ttdeci">final void initialize()</div><div class="ttdoc">initialize </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/dee/TestCActionMathBitMatrix_8java_source.htm#l00094">TestCActionMathBitMatrix.java:94</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy_htm"><div class="ttname"><a href="../../de/d51/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CCopy.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CCopy</a></div><div class="ttdoc">returns a copy of the matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d26/bit_2matrix_2CCopy_8java_source.htm#l00048">bit/matrix/CCopy.java:48</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize_htm"><div class="ttname"><a href="../../dd/da3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1collection_1_1CSize.htm">org.lightjason.agentspeak.action.builtin.collection.CSize</a></div><div class="ttdoc">returns the size of the collection. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d19/collection_2CSize_8java_source.htm#l00050">collection/CSize.java:50</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd_htm"><div class="ttname"><a href="../../d1/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CNAnd.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CNAnd</a></div><div class="ttdoc">performs the logical not-and operation to all bit matrices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d48/matrix_2CNAnd_8java_source.htm#l00040">matrix/CNAnd.java:40</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">org.lightjason.agentspeak.language.CRawTerm</a></div><div class="ttdoc">term structure for simple datatypes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00045">CRawTerm.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CDimension_htm"><div class="ttname"><a href="../../d1/da2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1math_1_1bit_1_1matrix_1_1CDimension.htm">org.lightjason.agentspeak.action.builtin.math.bit.matrix.CDimension</a></div><div class="ttdoc">returns the dimension (rows / columns) of a bit matrix. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d14/bit_2matrix_2CDimension_8java_source.htm#l00047">bit/matrix/CDimension.java:47</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_5c7d9bd26293bcba3b50ce1327e8211c.htm">action</a></li><li class="navelem"><a class="el" href="../../dir_f40dbd565273397ba32344fb1fccd977.htm">builtin</a></li><li class="navelem"><a class="el" href="../../d6/dee/TestCActionMathBitMatrix_8java.htm">TestCActionMathBitMatrix.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
