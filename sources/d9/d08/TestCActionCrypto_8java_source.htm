<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCActionCrypto.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/d08/TestCActionCrypto_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCActionCrypto.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d9/d08/TestCActionCrypto_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.action.builtin;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> com.codepoetics.protonpack.StreamUtils;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProvider;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.DataProviderRunner;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.UseDataProvider;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.ImmutablePair;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.ImmutableTriple;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.Pair;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.apache.commons.lang3.tuple.Triple;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.runner.RunWith;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">crypto</a>.<a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm">CCreateKey</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">crypto</a>.<a class="code" href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm">CDecrypt</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">crypto</a>.<a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm">CEncrypt</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">crypto</a>.<a class="code" href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm">CHash</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">crypto</a>.<a class="code" href="../../df/da2/enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm.htm">EAlgorithm</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/dcb/namespaceorg_1_1lightjason_1_1agentspeak_1_1error.htm">error</a>.<a class="code" href="../../d3/d4e/classorg_1_1lightjason_1_1agentspeak_1_1error_1_1CRuntimeException.htm">CRuntimeException</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">execution</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> javax.crypto.KeyGenerator;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> java.security.Key;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> java.security.NoSuchAlgorithmException;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> java.util.Collections;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> java.util.List;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;@RunWith( DataProviderRunner.class )</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm">   62</a></span>&#160;public final class <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm">TestCActionCrypto</a> extends <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    @DataProvider</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa31c503a5b97c8ffccf2f40e28dcf23e">   71</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Object[] <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa31c503a5b97c8ffccf2f40e28dcf23e">generatehash</a>()</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">return</span> StreamUtils.zip(</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    Stream.of( <span class="stringliteral">&quot;adler-32&quot;</span>, <span class="stringliteral">&quot;crc-32&quot;</span>, <span class="stringliteral">&quot;crc-32c&quot;</span>, <span class="stringliteral">&quot;murmur3-32&quot;</span>, <span class="stringliteral">&quot;murmur3-128&quot;</span>, <span class="stringliteral">&quot;siphash-2-4&quot;</span> ),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    Stream.of( <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;7804c01a&quot;</span>, <span class="stringliteral">&quot;911c63b0&quot;</span>}, <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;45154713&quot;</span>, <span class="stringliteral">&quot;29369833&quot;</span>},</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                               <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;387e0716&quot;</span>, <span class="stringliteral">&quot;4411bf68&quot;</span>}, <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;306202a8&quot;</span>, <span class="stringliteral">&quot;08b9852d&quot;</span>},</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                               <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;636cc4ff5f7ed59b51f29d6d949b4709&quot;</span>, <span class="stringliteral">&quot;f4459439308d1248efc0532fb4cd6d79&quot;</span>},</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                               <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;4f27c08e5981bc5a&quot;</span>, <span class="stringliteral">&quot;82ee572bf0a0dde4&quot;</span>}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    ),</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    ImmutablePair::new</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        ).toArray();</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    @Test</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    @UseDataProvider( <span class="stringliteral">&quot;generatecrypt&quot;</span> )</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a650acd9952d64ae6b256ffdb97deb96a">   92</a></span>&#160;    public final <span class="keywordtype">void</span> createkey( final Triple&lt;String, Integer, Integer&gt; p_crypt )</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm">CCreateKey</a>().<a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm#a3d161c0532e7dfb16ff1664a789ce2c9">execute</a>(</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            Stream.of( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( p_crypt.getLeft() ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            l_return</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        );</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        Assert.assertEquals( l_return.size(), p_crypt.getMiddle().intValue() );</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    @Test</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a8679e74bbff188aaac185c25ac9dd4e8">  112</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a8679e74bbff188aaac185c25ac9dd4e8">wrongalgorithm</a>() throws NoSuchAlgorithmException</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">final</span> Key l_key = KeyGenerator.getInstance( <span class="stringliteral">&quot;HmacSHA1&quot;</span> ).generateKey();</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm">CEncrypt</a>().execute(</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                Stream.of( l_key ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            ).value()</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        );</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm">CDecrypt</a>().execute(</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                Stream.of( l_key ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            ).value()</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        );</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    @Test</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#ae182b79fc5e331d61d05f6d05f44a518">  140</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#ae182b79fc5e331d61d05f6d05f44a518">decryptexecutionerror</a>() throws NoSuchAlgorithmException</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">final</span> Pair&lt;Key, Key&gt; l_key = <a class="code" href="../../df/da2/enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm.htm">EAlgorithm</a>.<a class="code" href="../../df/da2/enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm.htm#a67b52a03790d0ad9c5b70e9e5930d0c9">RSA</a>.generateKey();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm">CEncrypt</a>().<a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm#ab394f2bb3a864d1bfccfcc9f53aa1f9d">execute</a>(</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            Stream.of( l_key.getLeft(), <span class="stringliteral">&quot;xxx&quot;</span> ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            l_return</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        );</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm">CDecrypt</a>().execute(</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                Stream.of( l_key.getLeft(), l_return.get( 0 ).&lt;String&gt;raw() ).map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> ).collect( Collectors.toList() ),</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                l_return</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            ).value()</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        );</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    @Test</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    @UseDataProvider( <span class="stringliteral">&quot;generatehash&quot;</span> )</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#acf47a1a112831f9429ea2fb48317b609">  168</a></span>&#160;    public final <span class="keywordtype">void</span> hash( final Pair&lt;String, String[]&gt; p_hash )</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm">CHash</a>().<a class="code" href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm#aaaedefd19fb0cba39a63ac562718b1bc">execute</a>(</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            Stream.of( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( p_hash.getLeft() ), <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( <span class="stringliteral">&quot;test string&quot;</span> ), <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( 1234 ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            l_return</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        );</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        Assert.assertArrayEquals( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;String&gt;raw ).toArray( String[]::<span class="keyword">new</span> ), p_hash.getRight() );</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    @Test( expected = <a class="code" href="../../d3/d4e/classorg_1_1lightjason_1_1agentspeak_1_1error_1_1CRuntimeException.htm">CRuntimeException</a>.class )</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a33d9b705206ef54a1411b2c03b18e57f">  185</a></span>&#160;    public final <span class="keywordtype">void</span> hashexception()</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm">CHash</a>().<a class="code" href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm#aaaedefd19fb0cba39a63ac562718b1bc">execute</a>(</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            Stream.of( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( <span class="stringliteral">&quot;xxx&quot;</span> ), <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( 1234 ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            Collections.emptyList()</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        );</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    @DataProvider</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa2982e347c4e5861d796c37502b3ffcc">  200</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Object[] <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa2982e347c4e5861d796c37502b3ffcc">generatecrypt</a>()</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">return</span> Stream.of(</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keyword">new</span> ImmutableTriple&lt;&gt;( <span class="stringliteral">&quot;des&quot;</span>, 1, 0 ),</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keyword">new</span> ImmutableTriple&lt;&gt;( <span class="stringliteral">&quot;aes&quot;</span>, 1, 0 ),</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keyword">new</span> ImmutableTriple&lt;&gt;( <span class="stringliteral">&quot;rsa&quot;</span>, 2, 1 )</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        ).toArray();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    @Test</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#acf164d488690541847fb0ece74ee2926">  213</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#acf164d488690541847fb0ece74ee2926">createkeyError</a>()</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm">CCreateKey</a>().execute(</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                Stream.of( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( <span class="stringliteral">&quot;test&quot;</span> ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            ).value()</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        );</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    @Test</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    @UseDataProvider( <span class="stringliteral">&quot;generatecrypt&quot;</span> )</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a930531e6cdf55d3f0e37d48939d0fc95">  230</a></span>&#160;    public final <span class="keywordtype">void</span> encryptdecreypt( final Triple&lt;String, Integer, Integer&gt; p_crypt  )</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_returnkey = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm">CCreateKey</a>().<a class="code" href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm#a3d161c0532e7dfb16ff1664a789ce2c9">execute</a>(</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            Stream.of( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( p_crypt.getLeft() ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            l_returnkey</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        );</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        Assert.assertEquals( l_returnkey.size(), p_crypt.getMiddle().intValue() );</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_returnencrypt = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm">CEncrypt</a>().<a class="code" href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm#ab394f2bb3a864d1bfccfcc9f53aa1f9d">execute</a>(</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            Stream.of( l_returnkey.get( 0 ), <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( <span class="stringliteral">&quot;test string&quot;</span> ), <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">from</a>( 12345 ) ).collect( Collectors.toList() ),</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            l_returnencrypt</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        );</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm">CDecrypt</a>().<a class="code" href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm#a1ce992ecdac407ecd4cb41b983e3d880">execute</a>(</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            Stream.concat( Stream.of( l_returnkey.get( p_crypt.getRight() ) ), l_returnencrypt.stream() ).collect( Collectors.toList() ),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            l_return</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        );</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        Assert.assertEquals( l_return.size(), 2 );</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        Assert.assertEquals( l_return.get( 0 ).raw(), <span class="stringliteral">&quot;test string&quot;</span> );</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        Assert.assertEquals( l_return.get( 1 ).&lt;Number&gt;raw(), 12345 );</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a9ec1c62f13a1895314725a68094f381b">  274</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a9ec1c62f13a1895314725a68094f381b">main</a>( <span class="keyword">final</span> String[] p_args )</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm">TestCActionCrypto</a>().<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">invoketest</a>();</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash_htm"><div class="ttname"><a href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm">org.lightjason.agentspeak.action.builtin.crypto.CHash</a></div><div class="ttdoc">hash algorithm. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/dbf/action_2builtin_2crypto_2CHash_8java_source.htm#l00065">action/builtin/crypto/CHash.java:65</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_aa2982e347c4e5861d796c37502b3ffcc"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa2982e347c4e5861d796c37502b3ffcc">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.generatecrypt</a></div><div class="ttdeci">static Object [] generatecrypt()</div><div class="ttdoc">data provider generator of crypt key definition </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00200">TestCActionCrypto.java:200</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00045">IBaseTest.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey_htm"><div class="ttname"><a href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm">org.lightjason.agentspeak.action.builtin.crypto.CCreateKey</a></div><div class="ttdoc">creates an encrypting / decrypting key pair. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d46/CCreateKey_8java_source.htm#l00052">CCreateKey.java:52</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm_a2fbdd035b68cfb71c6ee6bd92c799cdf"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">org.lightjason.agentspeak.language.execution.IContext.EMPTYPLAN</a></div><div class="ttdeci">IContext EMPTYPLAN</div><div class="ttdoc">empty context with plan </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00047">IContext.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm_a153155d721393465604d8e795ad2fc31"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm#a153155d721393465604d8e795ad2fc31">org.lightjason.agentspeak.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00056">IBaseTest.java:56</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_htm"><div class="ttname"><a href="../../da/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto.htm">org.lightjason.agentspeak.action.builtin.crypto</a></div><div class="ttdef"><b>Definition:</b> <a href="../../df/d46/CCreateKey_8java_source.htm#l00024">CCreateKey.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt_htm"><div class="ttname"><a href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm">org.lightjason.agentspeak.action.builtin.crypto.CDecrypt</a></div><div class="ttdoc">dencrypting algorithm for decrypting data. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/da9/CDecrypt_8java_source.htm#l00055">CDecrypt.java:55</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_a8679e74bbff188aaac185c25ac9dd4e8"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a8679e74bbff188aaac185c25ac9dd4e8">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.wrongalgorithm</a></div><div class="ttdeci">final void wrongalgorithm()</div><div class="ttdoc">test wrong algorithm </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00112">TestCActionCrypto.java:112</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_htm"><div class="ttname"><a href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">org.lightjason.agentspeak.action.builtin</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_htm"><div class="ttname"><a href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">org.lightjason.agentspeak.language.execution</a></div></div>
<div class="ttc" id="enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm_htm_a67b52a03790d0ad9c5b70e9e5930d0c9"><div class="ttname"><a href="../../df/da2/enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm.htm#a67b52a03790d0ad9c5b70e9e5930d0c9">org.lightjason.agentspeak.action.builtin.crypto.EAlgorithm.RSA</a></div><div class="ttdeci">RSA</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/dd9/EAlgorithm_8java_source.htm#l00050">EAlgorithm.java:50</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">org.lightjason.agentspeak.language.execution.IContext</a></div><div class="ttdoc">execution context with local data </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00042">IContext.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt_htm_ab394f2bb3a864d1bfccfcc9f53aa1f9d"><div class="ttname"><a href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm#ab394f2bb3a864d1bfccfcc9f53aa1f9d">org.lightjason.agentspeak.action.builtin.crypto.CEncrypt.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d2a/CEncrypt_8java_source.htm#l00072">CEncrypt.java:72</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_a9ec1c62f13a1895314725a68094f381b"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#a9ec1c62f13a1895314725a68094f381b">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.main</a></div><div class="ttdeci">static void main(final String[] p_args)</div><div class="ttdoc">test call </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00274">TestCActionCrypto.java:274</a></div></div>
<div class="ttc" id="enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm_htm"><div class="ttname"><a href="../../df/da2/enumorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1EAlgorithm.htm">org.lightjason.agentspeak.action.builtin.crypto.EAlgorithm</a></div><div class="ttdoc">enum with encrypting types </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/dd9/EAlgorithm_8java_source.htm#l00046">EAlgorithm.java:46</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash_htm_aaaedefd19fb0cba39a63ac562718b1bc"><div class="ttname"><a href="../../df/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CHash.htm#aaaedefd19fb0cba39a63ac562718b1bc">org.lightjason.agentspeak.action.builtin.crypto.CHash.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/dbf/action_2builtin_2crypto_2CHash_8java_source.htm#l00081">action/builtin/crypto/CHash.java:81</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1error_htm"><div class="ttname"><a href="../../d8/dcb/namespaceorg_1_1lightjason_1_1agentspeak_1_1error.htm">org.lightjason.agentspeak.error</a></div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd5/CIllegalArgumentException_8java_source.htm#l00024">CIllegalArgumentException.java:24</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt_htm"><div class="ttname"><a href="../../da/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CEncrypt.htm">org.lightjason.agentspeak.action.builtin.crypto.CEncrypt</a></div><div class="ttdoc">encrypting algorithm. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d2a/CEncrypt_8java_source.htm#l00056">CEncrypt.java:56</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_ae182b79fc5e331d61d05f6d05f44a518"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#ae182b79fc5e331d61d05f6d05f44a518">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.decryptexecutionerror</a></div><div class="ttdeci">final void decryptexecutionerror()</div><div class="ttdoc">test decrypt execution array </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00140">TestCActionCrypto.java:140</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_htm"><div class="ttname"><a href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">org.lightjason.agentspeak.action</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey_htm_a3d161c0532e7dfb16ff1664a789ce2c9"><div class="ttname"><a href="../../d4/d35/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CCreateKey.htm#a3d161c0532e7dfb16ff1664a789ce2c9">org.lightjason.agentspeak.action.builtin.crypto.CCreateKey.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d46/CCreateKey_8java_source.htm#l00068">CCreateKey.java:68</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_acf164d488690541847fb0ece74ee2926"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#acf164d488690541847fb0ece74ee2926">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.createkeyError</a></div><div class="ttdeci">final void createkeyError()</div><div class="ttdoc">test key generation on error call </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00213">TestCActionCrypto.java:213</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm_a95c5d82dfc6d8ba46b478b1e5d34f1e5"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">org.lightjason.agentspeak.language.CRawTerm.from</a></div><div class="ttdeci">static&lt; N &gt; CRawTerm&lt; N &gt; from(final N p_value)</div><div class="ttdoc">factory for a raw term </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00104">CRawTerm.java:104</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm_aa31c503a5b97c8ffccf2f40e28dcf23e"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm#aa31c503a5b97c8ffccf2f40e28dcf23e">org.lightjason.agentspeak.action.builtin.TestCActionCrypto.generatehash</a></div><div class="ttdeci">static Object [] generatehash()</div><div class="ttdoc">data provider generator of hash definition </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00071">TestCActionCrypto.java:71</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt_htm_a1ce992ecdac407ecd4cb41b983e3d880"><div class="ttname"><a href="../../d8/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1crypto_1_1CDecrypt.htm#a1ce992ecdac407ecd4cb41b983e3d880">org.lightjason.agentspeak.action.builtin.crypto.CDecrypt.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/da9/CDecrypt_8java_source.htm#l00071">CDecrypt.java:71</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto_htm"><div class="ttname"><a href="../../d0/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionCrypto.htm">org.lightjason.agentspeak.action.builtin.TestCActionCrypto</a></div><div class="ttdoc">test action crypto </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d08/TestCActionCrypto_8java_source.htm#l00062">TestCActionCrypto.java:62</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1error_1_1CRuntimeException_htm"><div class="ttname"><a href="../../d3/d4e/classorg_1_1lightjason_1_1agentspeak_1_1error_1_1CRuntimeException.htm">org.lightjason.agentspeak.error.CRuntimeException</a></div><div class="ttdoc">runtime exception </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d90/CRuntimeException_8java_source.htm#l00037">CRuntimeException.java:37</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">org.lightjason.agentspeak.language.CRawTerm</a></div><div class="ttdoc">term structure for simple datatypes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00045">CRawTerm.java:45</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_5c7d9bd26293bcba3b50ce1327e8211c.htm">action</a></li><li class="navelem"><a class="el" href="../../dir_f40dbd565273397ba32344fb1fccd977.htm">builtin</a></li><li class="navelem"><a class="el" href="../../d9/d08/TestCActionCrypto_8java.htm">TestCActionCrypto.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
